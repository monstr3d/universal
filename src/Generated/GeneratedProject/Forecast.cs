using System;
using System.Collections.Generic;
using System.Linq;


namespace GeneratedProject
{
	public static class Forecast
	{

		 static public bool SuccessLoad { get; private set; } = true;

		public static  Diagram.UI.Interfaces.IDesktop Desktop { get => new InternalDesktop(); }

		internal class InternalDesktop : Diagram.UI.PureDesktop
		{
			internal InternalDesktop()
			{
				objects.Add(new InternalDesktop.OblectLabel0("Atmosphere", this));
				objects.Add(new InternalDesktop.OblectLabel1("Gravity", this));
				objects.Add(new InternalDesktop.OblectLabel2("Vector", this));
				objects.Add(new InternalDesktop.OblectLabel3("G-transformation", this));
				objects.Add(new InternalDesktop.OblectLabel4("A-transformation", this));
				objects.Add(new InternalDesktop.OblectLabel5("Motion equations", this));
				objects.Add(new InternalDesktop.OblectLabel6("Recursive", this));
				objects.Add(new InternalDesktop.OblectLabel7("Chart", this));
				Diagram.UI.Labels.PureArrowLabel currALabel = null;
				currALabel  = new InternalDesktop.ArrowLabel0("", this);
				arrows.Add(currALabel);
				currALabel.SourceNumber = (int)3;
				currALabel.TargetNumber = (int)1;
				currALabel  = new InternalDesktop.ArrowLabel1("", this);
				arrows.Add(currALabel);
				currALabel.SourceNumber = (int)4;
				currALabel.TargetNumber = (int)0;
				currALabel  = new InternalDesktop.ArrowLabel2("", this);
				arrows.Add(currALabel);
				currALabel.SourceNumber = (int)3;
				currALabel.TargetNumber = (int)2;
				currALabel  = new InternalDesktop.ArrowLabel3("", this);
				arrows.Add(currALabel);
				currALabel.SourceNumber = (int)4;
				currALabel.TargetNumber = (int)2;
				currALabel  = new InternalDesktop.ArrowLabel4("", this);
				arrows.Add(currALabel);
				currALabel.SourceNumber = (int)5;
				currALabel.TargetNumber = (int)3;
				currALabel  = new InternalDesktop.ArrowLabel5("", this);
				arrows.Add(currALabel);
				currALabel.SourceNumber = (int)5;
				currALabel.TargetNumber = (int)4;
				currALabel  = new InternalDesktop.ArrowLabel6("", this);
				arrows.Add(currALabel);
				currALabel.SourceNumber = (int)5;
				currALabel.TargetNumber = (int)2;
				currALabel  = new InternalDesktop.ArrowLabel7("", this);
				arrows.Add(currALabel);
				currALabel.SourceNumber = (int)6;
				currALabel.TargetNumber = (int)5;
				currALabel  = new InternalDesktop.ArrowLabel8("", this);
				arrows.Add(currALabel);
				currALabel.SourceNumber = (int)7;
				currALabel.TargetNumber = (int)6;
				currALabel  = new InternalDesktop.ArrowLabel9("", this);
				arrows.Add(currALabel);
				currALabel.SourceNumber = (int)7;
				currALabel.TargetNumber = (int)2;
				currALabel  = new InternalDesktop.ArrowLabel10("", this);
				arrows.Add(currALabel);
				currALabel.SourceNumber = (int)7;
				currALabel.TargetNumber = (int)5;
				bool pl = PostLoad();
				bool pd = PostDeserialize();
				SuccessLoad = pl & pd;
				PostLoad(this);
				Name = "Forecast"; 
			}
		
			internal class OblectLabel0 : Diagram.UI.Labels.PureObjectLabel
			{
				internal OblectLabel0(string name, Diagram.UI.Interfaces.IDesktop desktop) : base(name, "", "", 0, 0)
				{
					this.desktop = desktop;
					obj = new OblectLabel0.CategoryObject();
					obj.Object = this;
				}
		
				internal class CategoryObject : DinAtm.Portable.Atmosphere
				{
				internal CategoryObject()
				{
					int[] iff = new int[] { 150,6,140};
					If = iff;
				}
				}
			}
		
			internal class OblectLabel1 : Diagram.UI.Labels.PureObjectLabel
			{
				internal OblectLabel1(string name, Diagram.UI.Interfaces.IDesktop desktop) : base(name, "", "", 0, 0)
				{
					this.desktop = desktop;
					obj = new OblectLabel1.CategoryObject();
					obj.Object = this;
				}
		
				internal class CategoryObject : Gravity_36_36.Wrapper.Gravity
				{
				internal CategoryObject()
				{
					object o = null;
					double[] arr = null;
					List<object> l = new List<object>();
					arr = new double[]
					{
						398600.43599999999 ,
						6378.1369999999997 ,
						398600.40000000002
					};
				l.Add(arr);
					arr = new double[]
					{
						-0.0004841650994 ,
						9.5720110000000009E-07 ,
						5.3952120000000001E-07 ,
						6.8343299999999995E-08 ,
						-1.4951350000000001E-07 ,
						9.1300899999999999E-08 ,
						4.8883199999999999E-08 ,
						2.6862400000000001E-08 ,
						5.4065000000000001E-08 ,
						-4.9463800000000001E-08 ,
						3.56285E-08 ,
						4.01122E-08 ,
						-2.1554900000000001E-08 ,
						3.2274999999999999E-09 ,
						-6.1890999999999996E-09 ,
						1.7426599999999999E-08 ,
						8.5246000000000001E-09 ,
						-2.1551000000000001E-09 ,
						1.9923799999999999E-08 ,
						6.0954000000000003E-09 ,
						-9.5104999999999994E-09 ,
						-2.1642599999999999E-08 ,
						-2.2919999999999999E-10 ,
						5.1981000000000001E-09 ,
						5.7589999999999997E-09 ,
						3.7752E-09 ,
						-9.9774999999999995E-09 ,
						-2.5026E-09 ,
						-6.7262999999999998E-09 ,
						5.9286000000000004E-09 ,
						-4.0391000000000002E-09 ,
						-1.15E-09 ,
						-4.5042000000000002E-09 ,
						6.8919000000000002E-09 ,
						-3.7241E-09 ,
						-1.7000000000000001E-10 ,
						2.0277141999999999E-06 ,
						-5.3615110000000001E-07 ,
						-5.8280200000000001E-08 ,
						-7.6894199999999998E-08 ,
						2.7486870000000002E-07 ,
						2.3628199999999999E-08 ,
						1.460968E-07 ,
						8.1493500000000001E-08 ,
						1.5143799999999999E-08 ,
						-5.4500200000000003E-08 ,
						-5.59665E-08 ,
						-2.0669300000000001E-08 ,
						1.3079399999999999E-08 ,
						2.3769400000000001E-08 ,
						-2.7380800000000001E-08 ,
						-1.2802E-09 ,
						-9.6288999999999993E-09 ,
						5.2110999999999999E-09 ,
						-1.71788E-08 ,
						9.6642000000000006E-09 ,
						6.3465E-09 ,
						-5.0423000000000003E-09 ,
						6.5866000000000004E-09 ,
						-2.6663999999999998E-09 ,
						3.9251E-09 ,
						-7.3064999999999999E-09 ,
						1.9969E-09 ,
						-1.7521E-09 ,
						4.6820999999999998E-09 ,
						-1.9391000000000001E-09 ,
						-3.1760999999999998E-09 ,
						-1.409E-10 ,
						-1.10388E-08 ,
						2.3560000000000001E-09 ,
						2.4390658000000001E-06 ,
						9.044707E-07 ,
						3.5021810000000001E-07 ,
						6.52711E-07 ,
						4.8734499999999999E-08 ,
						3.2779499999999998E-07 ,
						7.7598500000000005E-08 ,
						2.2451399999999999E-08 ,
						-9.1276599999999996E-08 ,
						1.67542E-08 ,
						1.2380799999999999E-08 ,
						5.4324200000000001E-08 ,
						-3.7195200000000001E-08 ,
						-2.35054E-08 ,
						-2.1291799999999999E-08 ,
						-1.91519E-08 ,
						1.31239E-08 ,
						2.7528099999999999E-08 ,
						1.7485999999999999E-08 ,
						-6.1390000000000004E-09 ,
						-1.9640799999999999E-08 ,
						-1.3082700000000001E-08 ,
						-2.1465E-09 ,
						1.6401700000000001E-08 ,
						-1.5745999999999999E-09 ,
						3.6962000000000001E-09 ,
						-1.19628E-08 ,
						-2.5286000000000001E-09 ,
						-9.2717999999999994E-09 ,
						1.3617E-09 ,
						8.3159999999999998E-09 ,
						-6.8686E-09 ,
						9.6775000000000001E-09 ,
						-1.32095E-08 ,
						-4.8740000000000003E-09 ,
						7.2034250000000002E-07 ,
						9.9093369999999997E-07 ,
						-4.5233010000000002E-07 ,
						5.7203199999999997E-08 ,
						2.5122009999999999E-07 ,
						-1.7785200000000001E-08 ,
						-1.612938E-07 ,
						-8.6059000000000006E-09 ,
						-2.84259E-08 ,
						4.2159799999999997E-08 ,
						-2.11569E-08 ,
						3.2988700000000002E-08 ,
						5.4276799999999999E-08 ,
						-3.4110900000000001E-08 ,
						1.27131E-08 ,
						-3.3637999999999999E-09 ,
						-3.3835000000000002E-09 ,
						-8.1594000000000006E-09 ,
						2.6379199999999998E-08 ,
						9.2975999999999998E-09 ,
						-1.2194E-08 ,
						-3.3461999999999999E-09 ,
						-6.8316999999999999E-09 ,
						9.0688999999999996E-09 ,
						5.6586000000000003E-09 ,
						2.4984E-09 ,
						1.5286000000000001E-09 ,
						3.8607999999999997E-09 ,
						-6.3296999999999998E-09 ,
						-1.5101E-09 ,
						-5.4439999999999998E-09 ,
						1.01568E-08 ,
						2.137E-09 ,
						-6.0150000000000004E-10 ,
						-1.8877059999999999E-07 ,
						-2.955841E-07 ,
						-8.68265E-08 ,
						-2.7556099999999999E-07 ,
						-2.4633979999999998E-07 ,
						-1.01377E-08 ,
						-8.5342400000000006E-08 ,
						-4.0683500000000002E-08 ,
						-6.9557400000000001E-08 ,
						-3.8557000000000002E-09 ,
						-7.8510000000000001E-10 ,
						-4.3480499999999997E-08 ,
						3.9121999999999998E-08 ,
						6.8146999999999996E-09 ,
						5.2164700000000001E-08 ,
						1.21511E-08 ,
						1.4180000000000001E-09 ,
						-9.4317E-09 ,
						-3.8186E-09 ,
						-1.9116200000000001E-08 ,
						7.1524999999999999E-09 ,
						5.1080999999999998E-09 ,
						1.47221E-08 ,
						5.8679999999999998E-10 ,
						4.2378000000000004E-09 ,
						-2.1991300000000001E-08 ,
						-8.4529999999999997E-10 ,
						-7.8644000000000003E-09 ,
						2.0706999999999999E-09 ,
						-3.2131E-09 ,
						-4.4926999999999996E-09 ,
						1.1719999999999999E-10 ,
						8.4559999999999995E-10 ,
						1.7376350000000001E-07 ,
						-2.6733040000000002E-07 ,
						1.3262E-09 ,
						-2.5041100000000001E-08 ,
						-1.71468E-08 ,
						-5.1021499999999998E-08 ,
						3.7614600000000001E-08 ,
						3.1915900000000001E-08 ,
						6.0720700000000002E-08 ,
						2.5954799999999999E-08 ,
						1.13901E-08 ,
						-1.41227E-08 ,
						-1.25322E-08 ,
						1.9873E-09 ,
						-1.5459700000000001E-08 ,
						-1.34176E-08 ,
						4.3733000000000002E-09 ,
						-8.2423E-09 ,
						8.0082000000000005E-09 ,
						-6.0088000000000002E-09 ,
						-3.7810999999999997E-09 ,
						3.8380000000000002E-09 ,
						1.57567E-08 ,
						5.5800000000000002E-09 ,
						-3.1614999999999999E-09 ,
						-1.9984E-09 ,
						-4.6503E-09 ,
						5.0123999999999998E-09 ,
						-4.8492999999999998E-09 ,
						-4.0990999999999996E-09 ,
						-6.2657E-09 ,
						-3.5798E-09 ,
						9.6846000000000002E-09 ,
						-3.5883139999999999E-07 ,
						-6.4923700000000003E-08 ,
						6.3914300000000002E-08 ,
						-3.70547E-08 ,
						-3.9179999999999998E-10 ,
						4.1892000000000004E-09 ,
						-3.4153600000000001E-08 ,
						-1.88109E-08 ,
						3.4206899999999998E-08 ,
						1.6911900000000001E-08 ,
						-1.09756E-08 ,
						1.5699699999999999E-08 ,
						-3.8121000000000001E-09 ,
						1.13814E-08 ,
						-1.16607E-08 ,
						1.38314E-08 ,
						-1.2887200000000001E-08 ,
						4.2666000000000001E-09 ,
						1.46476E-08 ,
						1.14084E-08 ,
						3.1000000000000001E-12 ,
						-2.3066999999999999E-09 ,
						9.9066000000000005E-09 ,
						7.8999999999999999E-11 ,
						-1.9375E-09 ,
						-5.9529E-09 ,
						1.1794999999999999E-09 ,
						-3.7860000000000002E-10 ,
						1.5394999999999999E-09 ,
						7.3451999999999998E-09 ,
						9.7030000000000005E-10 ,
						6.7462199999999996E-08 ,
						-1.190107E-07 ,
						7.5610999999999995E-09 ,
						3.8816999999999999E-09 ,
						-1.8389399999999999E-08 ,
						3.5556E-09 ,
						3.7678799999999999E-08 ,
						5.6823599999999998E-08 ,
						-6.9833000000000001E-09 ,
						2.47642E-08 ,
						5.8839000000000003E-09 ,
						5.0711999999999996E-09 ,
						-1.9405500000000001E-08 ,
						-1.1822599999999999E-08 ,
						1.4605799999999999E-08 ,
						-6.1313000000000001E-09 ,
						-2.4921000000000001E-09 ,
						6.9129E-09 ,
						-2.373E-10 ,
						-1.28755E-08 ,
						-8.5909999999999996E-10 ,
						-4.4995999999999996E-09 ,
						7.0755000000000002E-09 ,
						3.4009999999999999E-10 ,
						2.5424999999999999E-09 ,
						-4.8291000000000002E-09 ,
						4.4472999999999997E-09 ,
						-1.1804E-09 ,
						7.9530000000000004E-10 ,
						-1.2419840000000001E-07 ,
						1.8713229999999999E-07 ,
						4.0054700000000001E-08 ,
						-6.9703000000000002E-09 ,
						-2.5516799999999999E-08 ,
						-1.16966E-08 ,
						-3.48919E-08 ,
						-3.2726099999999997E-08 ,
						-2.06218E-08 ,
						3.7817099999999999E-08 ,
						3.0129099999999997E-08 ,
						2.9418400000000001E-08 ,
						4.9121999999999996E-09 ,
						-1.5243599999999999E-08 ,
						-2.34988E-08 ,
						5.5469000000000004E-09 ,
						1.5658699999999998E-08 ,
						5.1782000000000002E-09 ,
						3.5160999999999999E-09 ,
						-5.2480999999999997E-09 ,
						-2.0044999999999999E-09 ,
						-1.2184500000000001E-08 ,
						1.6689999999999999E-09 ,
						-1.19E-10 ,
						1.0039600000000001E-08 ,
						1.1497000000000001E-09 ,
						-1.35093E-08 ,
						2.3738999999999998E-09 ,
						3.6649999999999998E-10 ,
						-4.8132399999999999E-08 ,
						1.243124E-07 ,
						-3.2224800000000001E-08 ,
						4.0905299999999998E-08 ,
						2.4146700000000001E-08 ,
						3.2298399999999998E-08 ,
						1.1740299999999999E-08 ,
						-2.4003700000000001E-08 ,
						2.2023000000000001E-09 ,
						-1.78758E-08 ,
						2.2163999999999999E-09 ,
						1.9012100000000001E-08 ,
						1.5020300000000001E-08 ,
						1.02897E-08 ,
						-5.8560000000000003E-10 ,
						-7.4084000000000002E-09 ,
						-2.9785600000000001E-08 ,
						-7.2797999999999996E-09 ,
						1.65E-10 ,
						8.2431000000000002E-09 ,
						-5.0682000000000003E-09 ,
						-5.4353E-09 ,
						-1.4883999999999999E-09 ,
						5.8073999999999996E-09 ,
						3.0105999999999999E-09 ,
						5.7399999999999997E-11 ,
						-4.1607999999999999E-09 ,
						2.3523999999999999E-09 ,
						9.9753200000000004E-08 ,
						-5.2064999999999997E-08 ,
						-6.4899000000000001E-09 ,
						4.1465899999999997E-08 ,
						3.8510599999999998E-08 ,
						1.1479299999999999E-08 ,
						-1.09552E-08 ,
						-2.5897999999999999E-09 ,
						4.7002E-09 ,
						-3.3704899999999998E-08 ,
						-3.0161500000000002E-08 ,
						-9.6824000000000004E-09 ,
						5.1670999999999997E-09 ,
						1.45345E-08 ,
						1.13588E-08 ,
						7.5752999999999997E-09 ,
						-1.3095000000000001E-08 ,
						-1.2852200000000001E-08 ,
						-7.5322000000000001E-09 ,
						8.4163000000000004E-09 ,
						1.6217999999999999E-09 ,
						1.9809999999999999E-10 ,
						1.4409000000000001E-09 ,
						-2.7284999999999998E-09 ,
						-6.7001999999999997E-09 ,
						-6.3194999999999999E-09 ,
						1.3133E-09 ,
						4.5318100000000001E-08 ,
						1.05182E-08 ,
						-4.4539099999999998E-08 ,
						1.47653E-08 ,
						-8.754E-10 ,
						1.8427500000000001E-08 ,
						-1.5788900000000001E-08 ,
						-7.8403000000000007E-09 ,
						1.5746500000000001E-08 ,
						1.31223E-08 ,
						8.4047000000000001E-09 ,
						-3.4555999999999999E-09 ,
						8.0666000000000002E-09 ,
						1.1889299999999999E-08 ,
						4.4306E-09 ,
						-1.7838E-09 ,
						2.7287999999999999E-09 ,
						-4.1603000000000002E-09 ,
						-5.7377999999999998E-09 ,
						-1.10613E-08 ,
						8.508E-10 ,
						-5.4061999999999998E-09 ,
						2.0112999999999999E-09 ,
						-4.2243E-09 ,
						3.2848000000000001E-09 ,
						-4.0690000000000001E-10 ,
						-3.3602E-09 ,
						-3.1280300000000003E-08 ,
						8.3128000000000005E-09 ,
						-3.2455600000000001E-08 ,
						1.9897400000000001E-08 ,
						2.91379E-08 ,
						-2.87346E-08 ,
						-2.1222E-09 ,
						-5.9513000000000003E-09 ,
						-1.9521999999999999E-09 ,
						-3.8281E-09 ,
						1.70577E-08 ,
						1.16255E-08 ,
						-8.2097999999999995E-09 ,
						-1.67307E-08 ,
						-8.6416000000000004E-09 ,
						1.4295999999999999E-09 ,
						-2.6580000000000001E-09 ,
						1.2371400000000001E-08 ,
						2.7782999999999998E-09 ,
						-1.2597199999999999E-08 ,
						-6.8980000000000004E-10 ,
						1.03061E-08 ,
						6.7832000000000003E-09 ,
						-7.2520000000000004E-10 ,
						-6.1412900000000003E-08 ,
						3.1958400000000002E-08 ,
						-2.8757200000000002E-08 ,
						1.3712400000000001E-08 ,
						1.64865E-08 ,
						-6.1816000000000002E-09 ,
						-7.0963999999999996E-09 ,
						2.77741E-08 ,
						-1.85066E-08 ,
						-1.69513E-08 ,
						-1.11264E-08 ,
						-2.5191000000000001E-09 ,
						8.0623999999999998E-09 ,
						1.7499999999999999E-10 ,
						-4.5565999999999998E-09 ,
						1.6575999999999999E-09 ,
						-7.2729999999999996E-10 ,
						1.34213E-08 ,
						9.3804999999999992E-09 ,
						4.1739999999999999E-09 ,
						3.4056999999999999E-09 ,
						-5.2037999999999998E-09 ,
						-1.7808000000000001E-09 ,
						-6.5508000000000002E-09 ,
						-5.1785100000000002E-08 ,
						5.4459E-09 ,
						-1.96596E-08 ,
						-1.4095600000000001E-08 ,
						-8.8532999999999996E-09 ,
						-4.8123999999999996E-09 ,
						1.08561E-08 ,
						2.0369799999999999E-08 ,
						1.0178E-08 ,
						5.8014000000000003E-09 ,
						-2.0155699999999999E-08 ,
						-2.0673100000000001E-08 ,
						7.3957999999999996E-09 ,
						1.6175999999999999E-08 ,
						-6.2352999999999998E-09 ,
						-6.1507000000000003E-09 ,
						4.3796000000000001E-09 ,
						-6.0838E-09 ,
						-5.282E-10 ,
						3.7931000000000001E-09 ,
						-1.2805999999999999E-09 ,
						-6.8707000000000003E-09 ,
						-8.0168000000000007E-09 ,
						-1.9573100000000001E-08 ,
						-1.3478E-08 ,
						5.3063999999999998E-09 ,
						-3.9385700000000003E-08 ,
						-1.7539299999999999E-08 ,
						-2.4648099999999999E-08 ,
						1.78471E-08 ,
						2.6347199999999999E-08 ,
						1.8417799999999999E-08 ,
						6.6160999999999999E-09 ,
						-3.6318999999999998E-09 ,
						-1.3675E-08 ,
						-2.3151E-09 ,
						-1.08597E-08 ,
						-7.7082999999999999E-09 ,
						-1.6878999999999999E-09 ,
						1.753E-09 ,
						5.0419000000000001E-09 ,
						-5.0421999999999998E-09 ,
						-9.3209999999999991E-10 ,
						-1.4351099999999999E-08 ,
						7.5180000000000003E-10 ,
						-3.6127000000000003E-08 ,
						-2.9409900000000001E-08 ,
						1.1331799999999999E-08 ,
						-2.1050599999999999E-08 ,
						-1.0692700000000001E-08 ,
						8.4444999999999999E-09 ,
						1.2215E-09 ,
						6.8979000000000003E-09 ,
						9.4515000000000003E-09 ,
						1.5537999999999999E-09 ,
						2.5097000000000001E-09 ,
						4.3338999999999997E-09 ,
						-3.1453999999999999E-09 ,
						-1.6790000000000001E-10 ,
						-8.8025999999999994E-09 ,
						-4.6677999999999999E-09 ,
						2.5011E-09 ,
						4.3554999999999997E-09 ,
						5.727E-10 ,
						-4.1016999999999996E-09 ,
						3.2539999999999998E-10 ,
						-3.29779E-08 ,
						3.6681999999999998E-09 ,
						3.0652500000000003E-08 ,
						4.4349000000000001E-09 ,
						-5.6776000000000003E-09 ,
						8.9480000000000001E-09 ,
						-4.0493999999999997E-09 ,
						-1.1989000000000001E-08 ,
						-1.31607E-08 ,
						-1.08818E-08 ,
						4.5031000000000003E-09 ,
						1.35711E-08 ,
						4.1030000000000002E-10 ,
						-6.5044E-09 ,
						-3.9763E-09 ,
						-5.1155000000000004E-09 ,
						-4.3785999999999997E-09 ,
						-5.5791000000000003E-09 ,
						7.9109999999999999E-10 ,
						5.4932999999999996E-09 ,
						2.7593999999999998E-09 ,
						3.3034200000000001E-08 ,
						1.5241099999999999E-08 ,
						2.43699E-08 ,
						8.767E-09 ,
						7.4795999999999997E-09 ,
						-7.5720000000000003E-10 ,
						6.0510000000000001E-10 ,
						-1.31056E-08 ,
						-2.6532999999999999E-09 ,
						3.8205000000000002E-09 ,
						-4.8796000000000004E-09 ,
						-1.00442E-08 ,
						-1.1248999999999999E-09 ,
						8.2253999999999993E-09 ,
						-9.6199999999999995E-09 ,
						-1.0918099999999999E-08 ,
						-4.4956000000000001E-09 ,
						3.531E-10 ,
						-2.3480000000000002E-09 ,
						-4.7068000000000003E-09 ,
						-2.7750800000000001E-08 ,
						1.2513700000000001E-08 ,
						-7.1168999999999997E-09 ,
						-4.9207999999999998E-09 ,
						6.5225999999999998E-09 ,
						-1.1322000000000001E-09 ,
						-8.0810000000000003E-10 ,
						4.1720000000000001E-09 ,
						-6.2726999999999996E-09 ,
						-1.16142E-08 ,
						2.5044000000000002E-09 ,
						-1.3520000000000001E-10 ,
						8.4762000000000002E-09 ,
						-3.8300000000000002E-10 ,
						4.4389999999999999E-10 ,
						-4.2858000000000002E-09 ,
						4.0221E-09 ,
						-2.6306200000000002E-08 ,
						-1.66678E-08 ,
						9.8039999999999996E-09 ,
						-4.9043999999999997E-09 ,
						-6.2665000000000002E-09 ,
						6.6383999999999997E-09 ,
						6.3429999999999997E-10 ,
						-1.8593E-09 ,
						-6.0496000000000003E-09 ,
						-3.9430000000000001E-09 ,
						-2.2369E-09 ,
						2.8537999999999998E-09 ,
						-8.262E-10 ,
						4.3770000000000001E-09 ,
						-1.1465999999999999E-09 ,
						-5.7191000000000002E-09 ,
						7.5179999999999999E-09 ,
						-2.4615599999999998E-08 ,
						1.5767999999999999E-08 ,
						1.1140300000000001E-08 ,
						4.8717999999999997E-09 ,
						-6.5966999999999998E-09 ,
						5.9840999999999996E-09 ,
						7.7244000000000003E-09 ,
						-7.7158000000000002E-09 ,
						-8.8595000000000007E-09 ,
						-6.1490000000000002E-09 ,
						-1.5404E-09 ,
						1.7740000000000001E-09 ,
						-5.6959999999999998E-10 ,
						1.04901E-08 ,
						6.2678000000000002E-09 ,
						-8.9299000000000008E-09 ,
						-1.7092300000000001E-08 ,
						3.3958999999999998E-09 ,
						-1.2772500000000001E-08 ,
						1.21192E-08 ,
						-5.4096E-09 ,
						-1.0523E-09 ,
						1.2454100000000001E-08 ,
						-2.6737E-09 ,
						-7.4700000000000001E-09 ,
						-9.1124999999999997E-09 ,
						-6.0012999999999999E-09 ,
						-2.0442E-09 ,
						2.2849999999999999E-09 ,
						9.8619999999999997E-10 ,
						4.5640000000000004E-09 ,
						-7.1693E-09 ,
						8.4211000000000002E-09 ,
						-2.176E-10 ,
						-5.0968E-09 ,
						4.5908999999999999E-09 ,
						-2.2659999999999998E-09 ,
						3.3951E-09 ,
						8.6391999999999997E-09 ,
						6.7808000000000004E-09 ,
						-7.0919999999999999E-10 ,
						-1.4309999999999999E-09 ,
						-6.7571999999999998E-09 ,
						-9.853000000000001E-10 ,
						1.1140300000000001E-08 ,
						4.8717999999999997E-09 ,
						6.7431E-09 ,
						2.2200000000000002E-11 ,
						9.6281999999999995E-09 ,
						1.001E-10 ,
						-2.6160000000000001E-09 ,
						-3.0546999999999998E-09 ,
						-4.6500999999999999E-09 ,
						9.0192999999999992E-09 ,
						4.8196999999999998E-09 ,
						2.1631000000000001E-09 ,
						1.7057E-09 ,
						8.9667999999999993E-09 ,
						3.6502000000000001E-09 ,
						1.07286E-08 ,
						5.6096999999999998E-09 ,
						5.6260000000000002E-09 ,
						3.4385000000000001E-09 ,
						-1.6244899999999999E-08 ,
						-1.80762E-08 ,
						2.9450000000000001E-09 ,
						5.8310000000000002E-09 ,
						5.3013999999999999E-09 ,
						3.4153E-09 ,
						-8.3959999999999998E-10 ,
						-5.8366999999999999E-09 ,
						8.6338000000000005E-09 ,
						9.0137999999999996E-09 ,
						3.6889999999999999E-10 ,
						-1.13406E-08 ,
						4.2350000000000004E-09 ,
						1.0518899999999999E-08 ,
						2.4294999999999999E-09 ,
						-4.6325999999999999E-09 ,
						3.0975000000000001E-09 ,
						6.8459999999999997E-09 ,
						-7.3754999999999996E-09 ,
						-6.7189E-09 ,
						-5.6394999999999998E-09 ,
						6.2000000000000003E-10 ,
						-3.6279999999999999E-09 ,
						-8.5760000000000002E-10 ,
						1.2529700000000001E-08 ,
						1.16954E-08 ,
						-7.1207999999999996E-09 ,
						7.2606000000000003E-09 ,
						7.9714999999999996E-09 ,
						-3.786E-09 ,
						8.9150999999999995E-09 ,
						2.9940000000000002E-09 ,
						9.2619999999999997E-10 ,
						1.0961E-09 ,
						6.8818E-09 ,
						1.9693999999999998E-09 ,
						1.04845E-08 ,
						2.1891999999999998E-09 ,
						-2.1781000000000002E-09 ,
						3.1745000000000002E-09 ,
						-1.5941099999999999E-08 ,
						5.1354000000000003E-09 ,
						8.0871000000000003E-09 ,
						2.7622999999999999E-09 ,
						-5.4599999999999998E-11 ,
						-9.4740000000000006E-10 ,
						-4.2625999999999997E-09 ,
						-3.1930000000000002E-10 ,
						-1.6973299999999999E-08 ,
						-2.6501999999999998E-09 ,
						-8.9973999999999996E-09 ,
						-9.1731999999999997E-09 ,
						-3.2430000000000001E-09 ,
						3.6344000000000002E-09 ,
						-2.8722000000000001E-09 ,
						6.4791999999999997E-09 ,
						-5.8913000000000001E-09 ,
						5.0965000000000003E-09 ,
						6.5942000000000002E-09 ,
						6.24E-09 ,
						-5.3443000000000002E-09 ,
						7.4786000000000002E-09 ,
						2.4732000000000001E-09 ,
						1.06401E-08 ,
						6.0071000000000001E-09 ,
						1.3699E-09 ,
						-5.7815000000000004E-09 ,
						-2.0539000000000001E-09 ,
						-5.7021E-09 ,
						-5.5092E-09 ,
						-1.4267E-09 ,
						1.3750999999999999E-09
					};
				l.Add(arr);
					arr = new double[]
					{
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						1.19E-09 ,
						2.4921710000000002E-07 ,
						-4.7343599999999998E-07 ,
						-9.6083899999999997E-08 ,
						2.69984E-08 ,
						9.7465900000000002E-08 ,
						5.8847200000000002E-08 ,
						1.9970700000000001E-08 ,
						-1.3027769999999999E-07 ,
						-2.66145E-08 ,
						-4.2095400000000003E-08 ,
						3.9529299999999999E-08 ,
						3.0458199999999998E-08 ,
						7.0986999999999999E-09 ,
						3.4085499999999998E-08 ,
						-3.1844899999999999E-08 ,
						-3.6262100000000003E-08 ,
						-2.9679000000000001E-09 ,
						5.8029999999999999E-09 ,
						2.05518E-08 ,
						-9.644000000000001E-10 ,
						1.30062E-08 ,
						-3.3126999999999999E-09 ,
						-1.0529699999999999E-08 ,
						-8.2429999999999998E-09 ,
						-1.4270000000000001E-10 ,
						6.2147999999999997E-09 ,
						-3.1928E-09 ,
						1.7543E-09 ,
						-1.19952E-08 ,
						3.4070000000000002E-10 ,
						7.4670000000000002E-10 ,
						2.4123E-09 ,
						-5.7405000000000002E-09 ,
						5.0525000000000001E-09 ,
						-1.4000946E-06 ,
						-6.1944769999999997E-07 ,
						6.6301520000000002E-07 ,
						-3.2386370000000002E-07 ,
						-3.7401310000000002E-07 ,
						9.3246699999999998E-08 ,
						6.6008700000000003E-08 ,
						-3.35532E-08 ,
						-5.1102899999999999E-08 ,
						-9.84958E-08 ,
						3.1920600000000003E-08 ,
						-6.3428299999999994E-08 ,
						-3.3551000000000001E-09 ,
						-3.33181E-08 ,
						2.6832000000000002E-08 ,
						7.7318000000000001E-09 ,
						1.2939399999999999E-08 ,
						-2.3289000000000001E-09 ,
						1.37476E-08 ,
						4.7932000000000004E-09 ,
						-2.0825999999999998E-09 ,
						-4.0370999999999996E-09 ,
						1.34247E-08 ,
						1.04728E-08 ,
						9.2185000000000008E-09 ,
						3.1719999999999998E-09 ,
						-1.16064E-08 ,
						-6.536E-10 ,
						-3.0842000000000002E-09 ,
						5.7275000000000003E-09 ,
						-4.9376999999999996E-09 ,
						1.5229E-09 ,
						6.367E-09 ,
						2.4944E-09 ,
						-2.0946000000000002E-09 ,
						1.4138845E-06 ,
						-2.009274E-07 ,
						-2.1529579999999999E-07 ,
						9.3727999999999997E-09 ,
						-2.1529269999999999E-07 ,
						-8.6346999999999999E-08 ,
						-7.5968299999999999E-08 ,
						-1.5502819999999999E-07 ,
						-1.4628950000000001E-07 ,
						2.4672800000000001E-08 ,
						9.6380799999999997E-08 ,
						2.1021599999999999E-08 ,
						1.5095699999999999E-08 ,
						-2.7123000000000001E-08 ,
						8.5514000000000001E-09 ,
						-1.4744E-09 ,
						-9.9510000000000001E-10 ,
						3.0306500000000001E-08 ,
						1.8713399999999999E-08 ,
						8.2273999999999999E-09 ,
						-1.7319300000000001E-08 ,
						-8.2339999999999995E-09 ,
						-1.4673900000000001E-08 ,
						-3.1308E-09 ,
						2.1284999999999998E-09 ,
						9.0419999999999992E-09 ,
						-8.2879999999999995E-09 ,
						-9.4092999999999998E-09 ,
						-8.6681000000000007E-09 ,
						1.3112E-09 ,
						2.6047999999999999E-09 ,
						7.4330999999999999E-09 ,
						3.5834999999999999E-09 ,
						-9.9549E-09 ,
						3.094237E-07 ,
						4.96903E-08 ,
						-4.7130640000000002E-07 ,
						-1.2376720000000001E-07 ,
						7.0179600000000002E-08 ,
						1.89722E-08 ,
						-7.8733999999999995E-08 ,
						-6.4482600000000001E-08 ,
						-2.8551999999999998E-09 ,
						-1.3302799999999999E-08 ,
						-1.9293299999999999E-08 ,
						7.0734E-09 ,
						4.5473400000000001E-08 ,
						2.10642E-08 ,
						2.0212E-09 ,
						-4.2206999999999997E-09 ,
						-2.2961599999999999E-08 ,
						1.3932E-08 ,
						1.43386E-08 ,
						6.4666999999999996E-09 ,
						3.7349000000000004E-09 ,
						4.1832999999999998E-09 ,
						-1.6528500000000001E-08 ,
						9.2713999999999992E-09 ,
						3.3269000000000002E-09 ,
						-1.3639999999999999E-10 ,
						-3.0520999999999998E-09 ,
						-8.4769999999999998E-10 ,
						-6.5448E-09 ,
						3.1032000000000002E-09 ,
						-3.7018000000000002E-09 ,
						1.8778999999999999E-09 ,
						-3.0954999999999999E-09 ,
						-6.6890700000000005E-07 ,
						-5.3678019999999995E-07 ,
						1.8620000000000001E-08 ,
						8.9462800000000001E-08 ,
						-5.3773299999999998E-08 ,
						-5.1106500000000002E-08 ,
						5.03126E-08 ,
						9.6522000000000002E-09 ,
						6.4653700000000001E-08 ,
						-1.62511E-08 ,
						8.8505000000000004E-09 ,
						3.3199999999999999E-11 ,
						5.0564E-09 ,
						2.9103599999999999E-08 ,
						2.73694E-08 ,
						-3.5994000000000002E-09 ,
						9.7040000000000008E-10 ,
						3.5020000000000001E-09 ,
						-2.3535999999999998E-09 ,
						-1.26654E-08 ,
						-3.6623000000000001E-09 ,
						1.06647E-08 ,
						7.9196000000000007E-09 ,
						3.2829999999999999E-10 ,
						1.8419E-09 ,
						-3.3849000000000002E-09 ,
						-2.0512000000000001E-09 ,
						5.4480000000000002E-10 ,
						1.1091E-09 ,
						5.9137000000000004E-09 ,
						-8.9831999999999993E-09 ,
						1.6489999999999999E-10 ,
						-2.371348E-07 ,
						1.517387E-07 ,
						3.0912260000000001E-07 ,
						2.2264820000000001E-07 ,
						-7.8379799999999994E-08 ,
						3.4921599999999998E-08 ,
						4.0134500000000001E-08 ,
						-4.2567999999999996E-09 ,
						5.4355999999999997E-09 ,
						-3.5833099999999999E-08 ,
						-3.2851799999999998E-08 ,
						-2.7477900000000001E-08 ,
						-1.15996E-08 ,
						2.0107700000000001E-08 ,
						8.9349999999999996E-10 ,
						1.8168E-09 ,
						-5.2022999999999997E-09 ,
						1.6717399999999999E-08 ,
						9.0189999999999996E-10 ,
						3.9236999999999996E-09 ,
						-6.4851999999999999E-09 ,
						6.2788000000000003E-09 ,
						4.9177000000000001E-09 ,
						6.8547999999999999E-09 ,
						1.4467E-09 ,
						3.3188000000000002E-09 ,
						-8.5579000000000008E-09 ,
						-4.8727000000000003E-09 ,
						3.5989000000000001E-09 ,
						6.0509000000000003E-09 ,
						-4.6861999999999998E-09 ,
						2.4083600000000001E-08 ,
						7.5094800000000001E-08 ,
						-9.6990999999999998E-08 ,
						-3.3500999999999998E-09 ,
						-8.9553700000000006E-08 ,
						3.5816600000000001E-08 ,
						-5.8835999999999998E-09 ,
						-6.3812999999999999E-09 ,
						6.1453000000000003E-09 ,
						-7.0595000000000003E-09 ,
						-3.5158000000000002E-09 ,
						3.3473999999999998E-09 ,
						-6.3048999999999996E-09 ,
						-1.5386E-09 ,
						3.5728999999999999E-09 ,
						1.8228E-09 ,
						2.8609999999999999E-09 ,
						2.8966000000000001E-09 ,
						-7.4194000000000002E-09 ,
						1.1771E-09 ,
						-2.3620999999999999E-09 ,
						5.2728999999999999E-09 ,
						-4.6636000000000003E-09 ,
						1.4214999999999999E-09 ,
						-2.4004000000000001E-09 ,
						2.4856000000000002E-09 ,
						-1.447E-10 ,
						-3.3291E-09 ,
						2.9285E-09 ,
						4.1387999999999998E-09 ,
						1.2017220000000001E-07 ,
						-2.3538999999999999E-09 ,
						-9.1679999999999998E-08 ,
						2.5325099999999999E-08 ,
						1.6192099999999999E-08 ,
						-8.8472999999999994E-09 ,
						-1.4984800000000001E-08 ,
						2.35054E-08 ,
						5.6651999999999998E-09 ,
						3.9290999999999996E-09 ,
						2.4813000000000001E-09 ,
						-9.3126000000000003E-09 ,
						3.4215999999999998E-09 ,
						4.0666999999999996E-09 ,
						2.1983000000000002E-09 ,
						-1.5897E-09 ,
						-4.8356999999999998E-09 ,
						1.6270000000000001E-09 ,
						1.4723E-09 ,
						-9.8612999999999994E-09 ,
						-5.3160000000000003E-09 ,
						7.4112999999999998E-09 ,
						2.5351000000000001E-09 ,
						1.9169999999999999E-10 ,
						3.0254999999999999E-09 ,
						1.10768E-08 ,
						3.7096000000000001E-09 ,
						1.01232E-08 ,
						-3.4356E-09 ,
						9.8739200000000006E-08 ,
						-3.8032800000000003E-08 ,
						4.3290199999999997E-08 ,
						2.43333E-08 ,
						4.60357E-08 ,
						2.7619999999999999E-08 ,
						3.7432799999999998E-08 ,
						-3.8312099999999998E-08 ,
						-2.8306100000000001E-08 ,
						3.44506E-08 ,
						2.5673E-09 ,
						-4.8859000000000003E-09 ,
						6.8850000000000001E-09 ,
						8.3147999999999995E-09 ,
						-1.8424200000000001E-08 ,
						-1.6283399999999999E-08 ,
						1.3628E-08 ,
						1.699E-09 ,
						7.6482999999999997E-09 ,
						-6.4752999999999998E-09 ,
						-3.8188999999999997E-09 ,
						-7.5010999999999993E-09 ,
						1.742E-09 ,
						1.0645E-09 ,
						3.6263999999999998E-09 ,
						4.0018999999999996E-09 ,
						-1.7539999999999999E-09 ,
						-1.2762E-09 ,
						-2.24543E-08 ,
						-1.7331000000000001E-08 ,
						3.1763300000000001E-08 ,
						-3.6184299999999998E-08 ,
						-1.0119E-09 ,
						1.5596100000000002E-08 ,
						1.28282E-08 ,
						1.8696999999999999E-08 ,
						-5.1743999999999998E-09 ,
						-6.9965999999999996E-09 ,
						-5.4108000000000004E-09 ,
						-5.8739999999999996E-10 ,
						2.4126099999999999E-08 ,
						-3.1763999999999999E-09 ,
						1.7288400000000001E-08 ,
						-4.7881999999999997E-09 ,
						-4.2048999999999998E-09 ,
						7.0209999999999998E-10 ,
						7.9032999999999994E-09 ,
						1.8968999999999999E-09 ,
						-5.5394999999999997E-09 ,
						-8.0774000000000003E-09 ,
						-5.6584000000000002E-09 ,
						5.3440000000000004E-10 ,
						8.1729999999999996E-10 ,
						6.8519999999999999E-09 ,
						5.3536000000000002E-09 ,
						-6.9074100000000006E-08 ,
						-6.8163999999999997E-09 ,
						-4.3063000000000003E-09 ,
						-3.94554E-08 ,
						1.9130899999999999E-08 ,
						-2.9384000000000001E-09 ,
						1.1855700000000001E-08 ,
						2.1960999999999999E-09 ,
						1.02937E-08 ,
						-1.8428999999999999E-08 ,
						-3.5139199999999999E-08 ,
						-1.64381E-08 ,
						1.5378899999999999E-08 ,
						1.85777E-08 ,
						7.9568999999999993E-09 ,
						1.8849E-09 ,
						-7.6154000000000008E-09 ,
						2.3565999999999999E-09 ,
						7.0721999999999996E-09 ,
						9.9434000000000002E-09 ,
						1.5715499999999999E-08 ,
						4.811E-09 ,
						-7.7170000000000005E-09 ,
						2.4097000000000001E-09 ,
						-1.8095E-09 ,
						1.9426999999999999E-09 ,
						-1.0879700000000001E-08 ,
						8.7796399999999996E-08 ,
						-3.13314E-08 ,
						1.4775599999999999E-08 ,
						6.1632000000000004E-09 ,
						1.9377499999999999E-08 ,
						-1.6901200000000001E-08 ,
						8.1173000000000005E-09 ,
						1.7357999999999999E-08 ,
						1.40674E-08 ,
						-8.7932000000000006E-09 ,
						-1.33824E-08 ,
						-5.5536000000000003E-09 ,
						1.22275E-08 ,
						1.7457000000000001E-09 ,
						4.264E-10 ,
						1.0900199999999999E-08 ,
						-1.7172E-09 ,
						-8.5304999999999999E-09 ,
						3.1964999999999999E-09 ,
						1.3919499999999999E-08 ,
						1.01392E-08 ,
						-2.4785000000000001E-09 ,
						-5.4193000000000001E-09 ,
						-3.4005E-09 ,
						6.7812399999999994E-08 ,
						4.5298900000000002E-08 ,
						-4.2554E-09 ,
						1.2041E-09 ,
						2.0753099999999999E-08 ,
						-3.46579E-08 ,
						-2.8023499999999999E-08 ,
						6.7269E-09 ,
						1.36367E-08 ,
						1.9729500000000001E-08 ,
						-4.4651999999999998E-09 ,
						2.7378000000000002E-09 ,
						-1.16876E-08 ,
						2.1769000000000002E-09 ,
						-2.5631E-09 ,
						5.5353000000000001E-09 ,
						-1.7457999999999999E-09 ,
						3.4719E-09 ,
						3.6678000000000001E-09 ,
						2.3826E-09 ,
						5.2653999999999996E-09 ,
						3.1756000000000001E-09 ,
						2.5409000000000002E-09 ,
						5.6450000000000003E-09 ,
						-5.0039000000000001E-09 ,
						-2.4319800000000001E-08 ,
						-3.8677100000000002E-08 ,
						1.1643800000000001E-08 ,
						-1.2869300000000001E-08 ,
						-1.2904300000000001E-08 ,
						-1.39252E-08 ,
						7.9162999999999992E-09 ,
						7.7607999999999999E-09 ,
						-2.0946999999999998E-09 ,
						-6.0990000000000003E-10 ,
						7.8295000000000007E-09 ,
						6.5214999999999999E-09 ,
						1.0670099999999999E-08 ,
						-1.09321E-08 ,
						-4.3945999999999997E-09 ,
						6.0829999999999998E-09 ,
						3.1072000000000002E-09 ,
						3.3685000000000001E-09 ,
						3.4849999999999999E-09 ,
						7.1894999999999996E-09 ,
						-6.7366000000000001E-09 ,
						-4.1709999999999998E-09 ,
						-5.1538000000000001E-09 ,
						-3.33624E-08 ,
						5.3556E-09 ,
						-2.0874299999999999E-08 ,
						-1.3702399999999999E-08 ,
						-1.4079000000000001E-09 ,
						1.09014E-08 ,
						4.2003000000000001E-09 ,
						-3.1340000000000001E-09 ,
						-1.6102300000000001E-08 ,
						-7.2531000000000001E-09 ,
						7.6165999999999995E-09 ,
						1.0877999999999999E-09 ,
						-9.772000000000001E-10 ,
						-6.2682000000000003E-09 ,
						-1.9558999999999998E-09 ,
						-3.3483000000000001E-09 ,
						-7.7404000000000003E-09 ,
						-1.7867E-09 ,
						7.1017999999999996E-09 ,
						8.7396999999999995E-09 ,
						2.1175999999999998E-09 ,
						3.7963999999999998E-09 ,
						3.2960999999999998E-09 ,
						7.1842999999999997E-09 ,
						-7.5292E-09 ,
						-2.663E-10 ,
						-7.3172000000000003E-09 ,
						-7.1399999999999997E-09 ,
						1.11168E-08 ,
						3.7851999999999997E-09 ,
						-1.2863000000000001E-08 ,
						-7.5036000000000004E-09 ,
						1.6662999999999999E-09 ,
						-1.19188E-08 ,
						-1.31772E-08 ,
						3.3800999999999999E-09 ,
						5.2229000000000002E-09 ,
						3.1105E-09 ,
						3.7108E-09 ,
						-2.2594999999999999E-09 ,
						-1.2433E-09 ,
						2.0824000000000002E-09 ,
						-1.9037E-08 ,
						5.0832999999999996E-09 ,
						-1.37472E-08 ,
						-1.25965E-08 ,
						-5.9466999999999997E-09 ,
						-1.34798E-08 ,
						-1.1688E-08 ,
						-4.6885999999999997E-09 ,
						-1.4118E-09 ,
						8.0827999999999994E-09 ,
						9.3409999999999991E-10 ,
						-3.4579999999999998E-09 ,
						-2.8975E-09 ,
						-4.3441000000000003E-09 ,
						7.4653000000000007E-09 ,
						9.8834E-09 ,
						9.4764000000000001E-09 ,
						4.0699999999999999E-10 ,
						-7.2514E-09 ,
						-4.4269000000000001E-09 ,
						-1.0543400000000001E-08 ,
						-8.7291000000000004E-09 ,
						-5.9279999999999996E-10 ,
						-9.4125999999999995E-09 ,
						-1.4985199999999999E-08 ,
						-1.20752E-08 ,
						-9.5975999999999992E-09 ,
						-1.2915100000000001E-08 ,
						5.9036000000000002E-09 ,
						1.09539E-08 ,
						-2.9946E-09 ,
						-3.669E-09 ,
						-7.8313999999999992E-09 ,
						1.9857999999999999E-09 ,
						1.0409999999999999E-10 ,
						-4.9602999999999999E-09 ,
						-5.8118000000000001E-09 ,
						-9.1086000000000006E-09 ,
						4.0581000000000003E-09 ,
						4.2819000000000003E-09 ,
						1.0673400000000001E-08 ,
						1.5313299999999999E-08 ,
						-3.7544000000000002E-09 ,
						9.0104999999999999E-09 ,
						-8.6424999999999995E-09 ,
						8.4412000000000002E-09 ,
						2.9262000000000001E-09 ,
						-4.1454000000000002E-09 ,
						2.24177E-08 ,
						5.7826000000000003E-09 ,
						5.2409999999999998E-10 ,
						2.2133999999999998E-09 ,
						-1.4221000000000001E-09 ,
						2.4841000000000001E-09 ,
						4.2618999999999999E-09 ,
						-4.3685000000000004E-09 ,
						-3.5370000000000001E-09 ,
						-1.12091E-08 ,
						1.5860500000000002E-08 ,
						1.8929099999999999E-08 ,
						-1.0896400000000001E-08 ,
						7.6167E-09 ,
						-2.1785999999999999E-09 ,
						-1.2914400000000001E-08 ,
						2.3213999999999999E-09 ,
						4.6444999999999998E-09 ,
						3.0398999999999998E-09 ,
						1.0770599999999999E-08 ,
						5.6219999999999998E-09 ,
						4.5399999999999998E-10 ,
						-8.0768999999999997E-09 ,
						-5.7621999999999998E-09 ,
						2.8395E-09 ,
						1.6190999999999999E-09 ,
						-2.2236000000000001E-09 ,
						2.23187E-08 ,
						1.32542E-08 ,
						-3.2617E-09 ,
						-7.7411000000000001E-09 ,
						1.6121E-09 ,
						-5.5616000000000003E-09 ,
						5.3421000000000004E-09 ,
						-4.0463E-09 ,
						-6.5115000000000001E-09 ,
						5.2115E-09 ,
						9.0297999999999996E-09 ,
						3.0135E-09 ,
						-5.7345E-09 ,
						-1.5149999999999999E-10 ,
						-4.7129999999999998E-09 ,
						2.4227999999999999E-09 ,
						3.6872999999999999E-09 ,
						-1.9882999999999998E-09 ,
						4.1806999999999998E-09 ,
						8.4745999999999997E-09 ,
						3.4241000000000002E-09 ,
						-5.8837999999999999E-09 ,
						7.0090000000000003E-10 ,
						-5.5580999999999997E-09 ,
						-9.0752999999999999E-09 ,
						-2.0044999999999999E-09 ,
						-1.3228699999999999E-08 ,
						5.6377000000000001E-09 ,
						4.1636E-09 ,
						-6.4260000000000004E-10 ,
						-1.0896400000000001E-08 ,
						-9.1901000000000003E-09 ,
						-1.0824E-08 ,
						1.18854E-08 ,
						-8.0894000000000006E-09 ,
						2.9153000000000001E-09 ,
						1.6815E-09 ,
						-8.4043E-09 ,
						6.1025000000000004E-09 ,
						6.3699999999999997E-11 ,
						-7.1528000000000004E-09 ,
						-8.0674000000000005E-09 ,
						-1.9524E-09 ,
						7.7399999999999999E-11 ,
						-3.2617E-09 ,
						-7.7411000000000001E-09 ,
						1.3169899999999999E-08 ,
						-6.1479999999999999E-10 ,
						-1.3781699999999999E-08 ,
						-9.3040000000000001E-10 ,
						-3.2619000000000001E-09 ,
						-2.9426000000000002E-09 ,
						6.8929999999999999E-10 ,
						-6.2328999999999998E-09 ,
						4.5286999999999999E-09 ,
						4.8391E-09 ,
						-4.5420999999999999E-09 ,
						5.2190999999999999E-09 ,
						1.4492999999999999E-09 ,
						3.9942000000000001E-09 ,
						-1.7208399999999999E-08 ,
						6.3145000000000001E-09 ,
						-1.5072300000000001E-08 ,
						-1.7282999999999999E-09 ,
						-5.5120999999999996E-09 ,
						-1.04979E-08 ,
						-9.5514999999999995E-09 ,
						1.7015E-09 ,
						1.3716100000000001E-08 ,
						5.3569999999999996E-09 ,
						-2.9276000000000001E-09 ,
						2.9511999999999999E-09 ,
						-8.6781000000000005E-09 ,
						1.00453E-08 ,
						-9.3520000000000004E-10 ,
						-3.7771999999999997E-09 ,
						2.7860000000000001E-09 ,
						-1.3695600000000001E-08 ,
						1.7638000000000001E-09 ,
						7.3591000000000004E-09 ,
						2.1540999999999998E-09 ,
						1.1044E-09 ,
						-1.2353000000000001E-09 ,
						1.26688E-08 ,
						1.0135699999999999E-08 ,
						-7.0194999999999996E-09 ,
						1.6316E-09 ,
						-4.1028000000000003E-09 ,
						-1.3122500000000001E-08 ,
						7.3980999999999999E-09 ,
						5.4994999999999999E-09 ,
						-5.3912000000000002E-09 ,
						-5.0892000000000002E-09 ,
						2.8652E-09 ,
						-2.5111000000000001E-09 ,
						3.2099999999999998E-10 ,
						-1.8440600000000001E-08 ,
						-1.5044100000000001E-08 ,
						-3.4620999999999999E-09 ,
						-8.0465000000000003E-09 ,
						3.3029999999999999E-09 ,
						-4.1551000000000003E-09 ,
						3.4309999999999998E-09 ,
						4.0290999999999997E-09 ,
						-4.7807000000000003E-09 ,
						1.8070000000000001E-09 ,
						-1.453E-10 ,
						4.1452999999999997E-09 ,
						-5.6003000000000002E-09 ,
						-1.4377999999999999E-09 ,
						-1.73273E-08 ,
						-1.9148E-09 ,
						3.6857000000000002E-09 ,
						4.3111000000000001E-09 ,
						-1.8424E-09 ,
						5.9459999999999999E-10 ,
						2.2099E-09 ,
						1.1197E-09 ,
						6.6707000000000001E-09 ,
						-7.7810000000000003E-10 ,
						2.4247000000000001E-09 ,
						-4.1506000000000001E-09 ,
						3.65E-09 ,
						-6.0513000000000004E-09 ,
						4.7941999999999998E-09 ,
						8.9332999999999993E-09 ,
						1.7421E-09 ,
						-1.6236000000000001E-09 ,
						-6.6836000000000004E-09 ,
						9.6230000000000008E-10 ,
						2.5193000000000002E-09 ,
						4.8661999999999996E-09 ,
						-4.9306000000000003E-09 ,
						-9.0703999999999996E-09 ,
						-3.8034999999999999E-09
					};
				l.Add(arr);
					arr = new double[]
					{
						2 ,
						3 ,
						4 ,
						5 ,
						6 ,
						7 ,
						8 ,
						9 ,
						10 ,
						11 ,
						12 ,
						13 ,
						14 ,
						15 ,
						16 ,
						17 ,
						18 ,
						19 ,
						20 ,
						21 ,
						22 ,
						23 ,
						24 ,
						25 ,
						26 ,
						27 ,
						28 ,
						29 ,
						30 ,
						31 ,
						32 ,
						33 ,
						34 ,
						35 ,
						36 ,
						37 ,
						0
					};
				l.Add(arr);
					arr = new double[]
					{
						-0.98001533784690209 ,
						0.9208601248303554 ,
						-0.82489875484382025 ,
						0.69596673900515538 ,
						-0.53921740286886788 ,
						0.36091591148576985 ,
						-0.16818885498923086 ,
						-0.031260596397060414 ,
						0.22946058286795248 ,
						-0.41848918488670667 ,
						0.59079105695608858 ,
						-0.73947940967279235 ,
						0.85861127004653004 ,
						-0.94342501811482338 ,
						0.99053070567550661 ,
						-0.99804555022580055 ,
						0.96566918850676386 ,
						-0.8946956818197993 ,
						0.78796179327082627 ,
						-0.64973360426572002 ,
						0.48553600211908376 ,
						-0.30193185404141609 ,
						0.10625969377119604 ,
						0.093659594660042006 ,
						-0.289835372377926 ,
						0.47442662610182962 ,
						-0.64005536814757491 ,
						0.7801015296099082 ,
						-0.88896756004350364 ,
						0.96230215777203265 ,
						-0.99717418847601924 ,
						0.99218984065104021 ,
						-0.94754833531176708 ,
						0.86503396326262194 ,
						-0.74794476819995914 ,
						0.60096072613398965 ,
						0
					};
				l.Add(arr);
					arr = new double[]
					{
						0.19892193842013112 ,
						-0.38989310137193089 ,
						0.56528050051024747 ,
						-0.71807401999970133 ,
						0.84216660610793337 ,
						-0.93259836201678925 ,
						0.98575479154676904 ,
						-0.99951126812702951 ,
						0.97331795468382376 ,
						-0.9082217802568171 ,
						0.80682459495277525 ,
						-0.67317917575485087 ,
						0.51262723976500335 ,
						-0.3315859393807985 ,
						0.13729137305010797 ,
						0.062490636694465251 ,
						-0.2597749379148967 ,
						0.44667621039518574 ,
						-0.61572413656232705 ,
						0.76016198503205623 ,
						-0.87421667259679758 ,
						0.95332951046063408 ,
						-0.99433841195020267 ,
						0.99560427898242598 ,
						-0.95707651570736452 ,
						0.88029505079015147 ,
						-0.76832878750276767 ,
						0.62565294173389963 ,
						-0.4579701706337439 ,
						0.27198264126096428 ,
						-0.075124149493969505 ,
						-0.12473700376737687 ,
						0.31961250327216179 ,
						-0.50171330698134664 ,
						0.66376096881506008 ,
						-0.79927855322440955 ,
						0
					};
				l.Add(arr);
					arr = new double[]
					{
						0.90689972371778771 ,
						0.82246710887939967 ,
						0.74589519380969516 ,
						0.67645214518843821 ,
						0.61347426357969947 ,
						0.55635964014840278 ,
						0.50456240393831431 ,
						0.45758750473004006 ,
						0.41498598161638522 ,
						0.37635067207465467 ,
						0.34131232052550803 ,
						0.30953604918606026 ,
						0.28071815748753359 ,
						0.25458321946801066 ,
						0.23088145139872379 ,
						0.20938632448506445 ,
						0.18989239982578798 ,
						0.17221336493811479 ,
						0.15618025308288686 ,
						0.14163982837104425 ,
						0.1284531212171349 ,
						0.11649410014250713 ,
						0.10564846723399202 ,
						0.095812565745715103 ,
						0.086892389403481401 ,
						0.0788026839431957 ,
						0.07146613229630433 ,
						0.064812615634697257 ,
						0.058778543212534111 ,
						0.053306244599981234 ,
						0.048343418500155791 ,
						0.043842632881364675 ,
						0.039760871647170022 ,
						0.036059123511596909 ,
						0.032702009150172823 ,
						0.029657443063308298 ,
						0
					};
				l.Add(arr);
					arr = new double[]
					{
						0.35998988587914887 ,
						0.12959271793528263 ,
						0.046652067740291119 ,
						0.016794272541853724 ,
						0.0060457682557652458 ,
						0.0021764154244447117 ,
						0.00078348754027147114 ,
						0.00028204759021006198 ,
						0.00010153427981220916 ,
						3.6551313802418745E-05 ,
						1.3158103284465683E-05 ,
						4.7367840997608551E-06 ,
						1.7051943675070771E-06 ,
						6.1385272576064013E-07 ,
						2.2098077269317731E-07 ,
						7.9550843143303041E-08 ,
						2.8637498944747734E-08 ,
						1.0309209976983983E-08 ,
						3.7112113231186468E-09 ,
						1.3359985406828869E-09 ,
						4.809459621951419E-10 ,
						1.7313568204466657E-10 ,
						6.2327094420868121E-11 ,
						2.243712360774725E-11 ,
						8.0771375670092889E-12 ,
						2.9076878309778603E-12 ,
						1.0467382104459098E-12 ,
						3.768151689237676E-13 ,
						1.356496496583993E-13 ,
						4.8832501900073692E-14 ,
						1.7579206786200848E-14 ,
						6.3283366448104024E-15 ,
						2.2781371865701327E-15 ,
						8.2010634581042737E-16 ,
						2.9522998983706154E-16 ,
						1.0627981034954606E-16 ,
						0
					};
				l.Add(arr);
					arr = new double[]
					{
						3.9310642860975734E-16 ,
						8.6446487757370501E-15 ,
						1.3132501746205334E-13 ,
						1.5899384137734832E-12 ,
						1.6255145581176426E-11 ,
						1.447860019690765E-10 ,
						1.1453666000080848E-09 ,
						8.1509579229813037E-09 ,
						5.2649048018693924E-08 ,
						3.10629891745363E-07 ,
						1.681617209112717E-06 ,
						8.3792395117306955E-06 ,
						3.8508759048104669E-05 ,
						0.00016340648804669095 ,
						0.00064038902039725463 ,
						0.002316535501264897 ,
						0.007724055974680847 ,
						0.023683879947812413 ,
						0.066554918580230563 ,
						0.17059164410996336 ,
						0.39621566772566347 ,
						0.82628099628854368 ,
						1.5270065808931708 ,
						2.4513805581978589 ,
						3.3066877411807951 ,
						3.510499218211387 ,
						2.4488910056527229 ,
						0.1195976068744114 ,
						-2.2741620141440819 ,
						-2.7587425520066744 ,
						-0.52507309613843367 ,
						2.2934501181043805 ,
						2.1640106397813428 ,
						-1.0515852110504651 ,
						-2.6081593605962952 ,
						0 ,
						0
					};
				l.Add(arr);
					arr = new double[]
					{
						1 ,
						36 ,
						71 ,
						106 ,
						140 ,
						173 ,
						205 ,
						236 ,
						266 ,
						295 ,
						323 ,
						350 ,
						376 ,
						401 ,
						425 ,
						448 ,
						470 ,
						491 ,
						511 ,
						530 ,
						548 ,
						565 ,
						581 ,
						596 ,
						610 ,
						623 ,
						635 ,
						646 ,
						656 ,
						665 ,
						673 ,
						680 ,
						686 ,
						691 ,
						695 ,
						698 ,
						700 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0 ,
						0
					};
				l.Add(arr);
					l.Add((int)(36));
					l.Add((int)(36));
				Saver = l;
				}
				}
			}
		
			internal class OblectLabel2 : Diagram.UI.Labels.PureObjectLabel
			{
				internal OblectLabel2(string name, Diagram.UI.Interfaces.IDesktop desktop) : base(name, "", "", 0, 0)
				{
					this.desktop = desktop;
					obj = new OblectLabel2.CategoryObject();
					obj.Object = this;
				}
		
				internal class CategoryObject : DataPerformer.Formula.VectorFormulaConsumer, FormulaEditor.Interfaces.ITreeCollectionProxyFactory
				{
				
					internal CategoryObject()
					{
						proxyFactory = this;
						feedback = new Dictionary<int, string>()
						{
						};
				
						formulaString = new string[]
						{
							"<Root>  <F>    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"x\" S=\"x\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>  </F></Root>",
							"<Root>  <F>    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"y\" S=\"y\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>  </F></Root>",
							"<Root>  <F>    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"z\" S=\"z\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>  </F></Root>",
							"<Root>  <F>    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"u\" S=\"u\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>  </F></Root>",
							"<Root>  <F>    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"v\" S=\"v\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>  </F></Root>",
							"<Root>  <F>    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"w\" S=\"w\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>  </F></Root>",
							"<Root>  <F>    <S type=\"FormulaEditor.Symbols.RootSymbol\" symbol=\"Q\" S=\"Q\" Type=\"2\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"P\">      <F>        <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"u\" S=\"u\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">          <F>            <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"2\" S=\"2\" Type=\"5\" Index=\"1\" Level=\"1\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"0\" Bold=\"1\" Sb=\"\">              <F />            </S>          </F>        </S>        <S type=\"FormulaEditor.Symbols.BinarySymbol\" symbol=\"+\" S=\"+\" Type=\"3\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"0\" Bold=\"1\" Sb=\"\" />        <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"v\" S=\"v\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">          <F>            <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"2\" S=\"2\" Type=\"5\" Index=\"1\" Level=\"1\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"0\" Bold=\"1\" Sb=\"\">              <F />            </S>          </F>        </S>        <S type=\"FormulaEditor.Symbols.BinarySymbol\" symbol=\"+\" S=\"+\" Type=\"3\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"0\" Bold=\"1\" Sb=\"\" />        <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"w\" S=\"w\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">          <F>            <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"2\" S=\"2\" Type=\"5\" Index=\"1\" Level=\"1\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"0\" Bold=\"1\" Sb=\"\">              <F />            </S>          </F>        </S>      </F>      <F />    </S>  </F></Root>",
							"<Root>  <F>    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"t\" S=\"t\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>  </F></Root>"
						};
						isSerialized = true;
						calculateDerivation = true;
						deriOrder = 1;
						arguments =  new List<string>()
						{
							"t = Time"
						};
						parameters =new Dictionary<string, object>()
						{
							{"w", (double)2.4915102288401765 },
							{"z", (double)6561.3896888429445 },
							{"x", (double)-2481.1769949632367 },
							{"y", (double)503.62531925865324 },
							{"u", (double)6.9610510731748887 },
							{"v", (double)1.7737490756446463 }
						};
						operationNames = new Dictionary<System.Int32,System.String>()
						{
						};
						Init();
					}
				
					FormulaEditor.Interfaces.ITreeCollectionProxy FormulaEditor.Interfaces.ITreeCollectionProxyFactory.CreateProxy(FormulaEditor.Interfaces.ITreeCollection collection, Func<object, bool> checkValue)
					{
						FormulaEditor.Interfaces.ITreeCollection f = this;
						var t = 
							FormulaEditor.ObjectFormulaTree.CreateList(f.Trees, new List<FormulaEditor.ObjectFormulaTree>());
						var tt = t.ToArray();
						return new Calculation(tt, checkValue);
					}
				
					internal class Calculation : FormulaEditor.Interfaces.ITreeCollectionProxy
					{
						public bool Success { get => success; }
						
						public void Update()
						{
							success = true;
							variable = aliasName0.Value;
							if (checkValue(variable)) { success = false; return; }
							var_0 = (double)variable;
							variable = aliasName2.Value;
							if (checkValue(variable)) { success = false; return; }
							var_2 = (double)variable;
							variable = aliasName3.Value;
							if (checkValue(variable)) { success = false; return; }
							var_3 = (double)variable;
							variable = aliasName4.Value;
							if (checkValue(variable)) { success = false; return; }
							var_4 = (double)variable;
							variable = aliasName5.Value;
							if (checkValue(variable)) { success = false; return; }
							var_5 = (double)variable;
							variable = aliasName6.Value;
							if (checkValue(variable)) { success = false; return; }
							var_6 = (double)variable;
							variable = aliasName7.Value;
							if (checkValue(variable)) { success = false; return; }
							var_7 = (double)variable;
							var_9 = Math.Pow(var_7, var_8);
							variable = aliasName10.Value;
							if (checkValue(variable)) { success = false; return; }
							var_10 = (double)variable;
							var_12 = Math.Pow(var_10, var_11);
							var_13 = (var_9) + (var_12);
							variable = aliasName14.Value;
							if (checkValue(variable)) { success = false; return; }
							var_14 = (double)variable;
							var_16 = Math.Pow(var_14, var_15);
							var_17 = (var_13) + (var_16);
							var_18 = Math.Sqrt(var_17);
							var_20 = (var_19) * (var_1);
							var_21 = (var_20) / (var_18);
							variable = measurement22.Parameter();
							if (checkValue(variable)) { success = false; return; }
							var_22 = (double)variable;
							variable = measurement23.Parameter();
							if (checkValue(variable)) { success = false; return; }
							var_23 = (double)variable;
						}
						
						internal  Calculation(FormulaEditor.ObjectFormulaTree[] trees, Func<object, bool> checkValue)
						{
							success = true;
							this.trees = trees;
							this.checkValue = checkValue;
							aliasName0 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToAliasName(trees[0]);
							aliasName2 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToAliasName(trees[2]);
							aliasName3 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToAliasName(trees[3]);
							aliasName4 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToAliasName(trees[4]);
							aliasName5 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToAliasName(trees[5]);
							aliasName6 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToAliasName(trees[6]);
							aliasName7 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToAliasName(trees[7]);
							aliasName10 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToAliasName(trees[10]);
							aliasName14 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToAliasName(trees[14]);
							measurement22 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToMeasurement(trees[22]);
							measurement23 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToMeasurement(trees[23]);
							dictionary[trees[0]] = Get_0;
							dictionary[trees[1]] = Get_1;
							dictionary[trees[2]] = Get_2;
							dictionary[trees[3]] = Get_3;
							dictionary[trees[4]] = Get_4;
							dictionary[trees[5]] = Get_5;
							dictionary[trees[6]] = Get_6;
							dictionary[trees[7]] = Get_7;
							dictionary[trees[8]] = Get_8;
							dictionary[trees[9]] = Get_9;
							dictionary[trees[10]] = Get_10;
							dictionary[trees[11]] = Get_11;
							dictionary[trees[12]] = Get_12;
							dictionary[trees[13]] = Get_13;
							dictionary[trees[14]] = Get_14;
							dictionary[trees[15]] = Get_15;
							dictionary[trees[16]] = Get_16;
							dictionary[trees[17]] = Get_17;
							dictionary[trees[18]] = Get_18;
							dictionary[trees[19]] = Get_19;
							dictionary[trees[20]] = Get_20;
							dictionary[trees[21]] = Get_21;
							dictionary[trees[22]] = Get_22;
							dictionary[trees[23]] = Get_23;
						}
						
						public Func<object> this[FormulaEditor.ObjectFormulaTree tree]
						{ get { return dictionary[tree]; }}
						
						Dictionary<FormulaEditor.ObjectFormulaTree, Func<object> > dictionary = new Dictionary<FormulaEditor.ObjectFormulaTree, Func<object> >();
						
						Diagram.UI.Interfaces.IAliasName aliasName0;
						Diagram.UI.Interfaces.IAliasName aliasName2;
						Diagram.UI.Interfaces.IAliasName aliasName3;
						Diagram.UI.Interfaces.IAliasName aliasName4;
						Diagram.UI.Interfaces.IAliasName aliasName5;
						Diagram.UI.Interfaces.IAliasName aliasName6;
						Diagram.UI.Interfaces.IAliasName aliasName7;
						Diagram.UI.Interfaces.IAliasName aliasName10;
						Diagram.UI.Interfaces.IAliasName aliasName14;
						DataPerformer.Interfaces.IMeasurement measurement22;
						DataPerformer.Interfaces.IMeasurement measurement23;
						FormulaEditor.ObjectFormulaTree currentTree = null;
						object[] currentArray = null;
						double doubleValue = 0;
						FormulaEditor.ObjectFormulaTree[] trees = null;
						double var_0 = 0;
						double var_1 = 0;
						double var_2 = 0;
						double var_3 = 0;
						double var_4 = 0;
						double var_5 = 0;
						double var_6 = 0;
						double var_7 = 0;
						double var_8 = 2;
						double var_9 = 0;
						double var_10 = 0;
						double var_11 = 2;
						double var_12 = 0;
						double var_13 = 0;
						double var_14 = 0;
						double var_15 = 2;
						double var_16 = 0;
						double var_17 = 0;
						double var_18 = 0;
						double var_19 = 0.5;
						double var_20 = 0;
						double var_21 = 0;
						double var_22 = 0;
						double var_23 = 0;
						
						object Get_0()
						{
							return success ? var_0 : null;
						}
						
						object Get_1()
						{
							return success ? var_1 : null;
						}
						
						object Get_2()
						{
							return success ? var_2 : null;
						}
						
						object Get_3()
						{
							return success ? var_3 : null;
						}
						
						object Get_4()
						{
							return success ? var_4 : null;
						}
						
						object Get_5()
						{
							return success ? var_5 : null;
						}
						
						object Get_6()
						{
							return success ? var_6 : null;
						}
						
						object Get_7()
						{
							return success ? var_7 : null;
						}
						
						object Get_8()
						{
							return success ? var_8 : null;
						}
						
						object Get_9()
						{
							return success ? var_9 : null;
						}
						
						object Get_10()
						{
							return success ? var_10 : null;
						}
						
						object Get_11()
						{
							return success ? var_11 : null;
						}
						
						object Get_12()
						{
							return success ? var_12 : null;
						}
						
						object Get_13()
						{
							return success ? var_13 : null;
						}
						
						object Get_14()
						{
							return success ? var_14 : null;
						}
						
						object Get_15()
						{
							return success ? var_15 : null;
						}
						
						object Get_16()
						{
							return success ? var_16 : null;
						}
						
						object Get_17()
						{
							return success ? var_17 : null;
						}
						
						object Get_18()
						{
							return success ? var_18 : null;
						}
						
						object Get_19()
						{
							return success ? var_19 : null;
						}
						
						object Get_20()
						{
							return success ? var_20 : null;
						}
						
						object Get_21()
						{
							return success ? var_21 : null;
						}
						
						object Get_22()
						{
							return success ? var_22 : null;
						}
						
						object Get_23()
						{
							return success ? var_23 : null;
						}
						
						Func<object, bool> checkValue = (o) => false;
						object variable;
						bool success = true;
					
					}
				}
			}
		
			internal class OblectLabel3 : Diagram.UI.Labels.PureObjectLabel
			{
				internal OblectLabel3(string name, Diagram.UI.Interfaces.IDesktop desktop) : base(name, "", "", 0, 0)
				{
					this.desktop = desktop;
					obj = new OblectLabel3.CategoryObject();
					obj.Object = this;
				}
		
				internal class CategoryObject : DataPerformer.Portable.ObjectTransformer
				{
				internal CategoryObject()
				{
					links = new Dictionary<string, string>()
					{
						{ "x","Vector.Formula_1"},
						{ "y","Vector.Formula_2"},
						{ "z","Vector.Formula_3"}
					};
				}
				}
			}
		
			internal class OblectLabel4 : Diagram.UI.Labels.PureObjectLabel
			{
				internal OblectLabel4(string name, Diagram.UI.Interfaces.IDesktop desktop) : base(name, "", "", 0, 0)
				{
					this.desktop = desktop;
					obj = new OblectLabel4.CategoryObject();
					obj.Object = this;
				}
		
				internal class CategoryObject : DataPerformer.Portable.ObjectTransformer
				{
				internal CategoryObject()
				{
					links = new Dictionary<string, string>()
					{
						{ "t","Vector.Formula_8"},
						{ "x","Vector.Formula_1"},
						{ "y","Vector.Formula_2"},
						{ "z","Vector.Formula_3"}
					};
				}
				}
			}
		
			internal class OblectLabel5 : Diagram.UI.Labels.PureObjectLabel
			{
				internal OblectLabel5(string name, Diagram.UI.Interfaces.IDesktop desktop) : base(name, "", "", 0, 0)
				{
					this.desktop = desktop;
					obj = new OblectLabel5.CategoryObject();
					obj.Object = this;
				}
		
				internal class CategoryObject : DataPerformer.Formula.DifferentialEquationSolver, FormulaEditor.Interfaces.ITreeCollectionProxyFactory
				{
				
					internal CategoryObject()
					{
						proxyFactory = this;
						aliasNames  = new Dictionary<object, object>()
						{
							{ 'v' ,"Vector.u" }
				, 			{ 'u' ,"Vector.u" }
				, 			{ 'z' ,"Vector.z" }
				, 			{ 'y' ,"Vector.y" }
				, 			{ 'x' ,"Vector.x" }
				, 			{ 'w' ,"Vector.w" }
						};
				
						feedback = new Dictionary<int, string>()
						{
						};
				
						vars = new Dictionary<object, object>()
						{
										{'v' , new object[] {"<Root>  <F>    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"b\" S=\"b\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>    <S type=\"FormulaEditor.Symbols.BinarySymbol\" symbol=\"+\" S=\"+\" Type=\"3\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"0\" Bold=\"1\" Sb=\"\" />    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"q\" S=\"q\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"y\" S=\"y\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>    <S type=\"FormulaEditor.Symbols.BinarySymbol\" symbol=\"-\" S=\"-\" Type=\"3\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"0\" Bold=\"1\" Sb=\"\" />    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"s\" S=\"s\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"r\" S=\"r\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"m\" S=\"m\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"v\" S=\"v\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>    <S type=\"FormulaEditor.Symbols.BinarySymbol\" symbol=\"-\" S=\"-\" Type=\"3\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"0\" Bold=\"1\" Sb=\"\" />    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"o\" S=\"o\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"u\" S=\"u\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>  </F></Root>" , (System.Double)(1.2168189383400001)}}
							,			{'u' , new object[] {"<Root>  <F>    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"a\" S=\"a\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>    <S type=\"FormulaEditor.Symbols.BinarySymbol\" symbol=\"+\" S=\"+\" Type=\"3\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"0\" Bold=\"1\" Sb=\"\" />    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"q\" S=\"q\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"x\" S=\"x\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>    <S type=\"FormulaEditor.Symbols.BinarySymbol\" symbol=\"-\" S=\"-\" Type=\"3\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"0\" Bold=\"1\" Sb=\"\" />    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"s\" S=\"s\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"r\" S=\"r\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"m\" S=\"m\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"u\" S=\"u\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>    <S type=\"FormulaEditor.Symbols.BinarySymbol\" symbol=\"+\" S=\"+\" Type=\"3\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"0\" Bold=\"1\" Sb=\"\" />    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"o\" S=\"o\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"v\" S=\"v\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>  </F></Root>" , (System.Double)(-0.98539477743199999)}}
							,			{'z' , new object[] {"<Root>  <F>    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"w\" S=\"w\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>  </F></Root>" , (System.Double)(0)}}
							,			{'y' , new object[] {"<Root>  <F>    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"v\" S=\"v\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>  </F></Root>" , (System.Double)(-4463.9369842100004)}}
							,			{'x' , new object[] {"<Root>  <F>    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"u\" S=\"u\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>  </F></Root>" , (System.Double)(-5448.3481532400001)}}
							,			{'w' , new object[] {"<Root>  <F>    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"c\" S=\"c\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>    <S type=\"FormulaEditor.Symbols.BinarySymbol\" symbol=\"-\" S=\"-\" Type=\"3\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"0\" Bold=\"1\" Sb=\"\" />    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"s\" S=\"s\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"r\" S=\"r\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"m\" S=\"m\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"w\" S=\"w\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>  </F></Root>" , (System.Double)(7.45047785592)}}
						};
						pars = new Dictionary<object, object>()
						{
										{'r' , "A-transformation.Density"}
							,			{'m' , "Vector.Formula_7"}
							,			{'a' , "G-transformation.Gx"}
							,			{'c' , "G-transformation.Gz"}
							,			{'b' , "G-transformation.Gy"}
						};
						aliases = new Dictionary<object, object>()
						{
										{"x" , (System.Double)(-5448.3481532400001)}
							,			{"q" , (System.Double)(5.3174953569821228E-09)}
							,			{"o" , (System.Double)(0.00014584231700000001)}
							,			{"v" , (System.Double)(1.2168189383400001)}
							,			{"u" , (System.Double)(-0.98539477743199999)}
							,			{"y" , (System.Double)(-4463.9369842100004)}
							,			{"w" , (System.Double)(7.45047785592)}
							,			{"s" , (System.Double)(1.6189340462770081E-13)}
							,			{"z" , (System.Double)(0)}
						};
						isSerialized = true;
						calculateDerivation = false;
						deriOrder = 0;
						arguments =  new List<string>()
						{
							"a = G-transformation.Gx",
							"b = G-transformation.Gy",
							"c = G-transformation.Gz",
							"r = A-transformation.Density",
							"m = Vector.Formula_7"
						};
					}
					FormulaEditor.Interfaces.ITreeCollectionProxy FormulaEditor.Interfaces.ITreeCollectionProxyFactory.CreateProxy(FormulaEditor.Interfaces.ITreeCollection collection, Func<object, bool> checkValue)
					{
						FormulaEditor.Interfaces.ITreeCollection f = this;
						FormulaEditor.ObjectFormulaTree[] trees = FormulaEditor.StaticExtensionFormulaEditor.Transform(f.Trees);
						return new Calculation(trees, checkValue);
					}
				
					internal class Calculation : FormulaEditor.Interfaces.ITreeCollectionProxy
					{
						public bool Success { get => success; }
						
						public void Update()
						{
							success = true;
							variable = measurement0.Parameter();
							if (checkValue(variable)) { success = false; return; }
							var_0 = (double)variable;
							variable = aliasName1.Value;
							if (checkValue(variable)) { success = false; return; }
							var_1 = (double)variable;
							variable = measurement2.Parameter();
							if (checkValue(variable)) { success = false; return; }
							var_2 = (double)variable;
							var_3 = (var_1) * (var_2);
							variable = aliasName4.Value;
							if (checkValue(variable)) { success = false; return; }
							var_4 = (double)variable;
							variable = measurement5.Parameter();
							if (checkValue(variable)) { success = false; return; }
							var_5 = (double)variable;
							var_6 = (var_4) * (var_5);
							variable = measurement7.Parameter();
							if (checkValue(variable)) { success = false; return; }
							var_7 = (double)variable;
							var_8 = (var_6) * (var_7);
							variable = measurement9.Parameter();
							if (checkValue(variable)) { success = false; return; }
							var_9 = (double)variable;
							var_10 = (var_8) * (var_9);
							var_11 = (var_3) - (var_10);
							var_12 = (var_0) + (var_11);
							variable = aliasName13.Value;
							if (checkValue(variable)) { success = false; return; }
							var_13 = (double)variable;
							variable = measurement14.Parameter();
							if (checkValue(variable)) { success = false; return; }
							var_14 = (double)variable;
							var_15 = (var_13) * (var_14);
							var_16 = (var_12) + (var_15);
							variable = measurement17.Parameter();
							if (checkValue(variable)) { success = false; return; }
							var_17 = (double)variable;
							variable = measurement18.Parameter();
							if (checkValue(variable)) { success = false; return; }
							var_18 = (double)variable;
							var_19 = (var_1) * (var_18);
							var_20 = (var_4) * (var_5);
							var_21 = (var_20) * (var_7);
							variable = measurement22.Parameter();
							if (checkValue(variable)) { success = false; return; }
							var_22 = (double)variable;
							var_23 = (var_21) * (var_22);
							var_24 = (var_19) - (var_23);
							variable = measurement25.Parameter();
							if (checkValue(variable)) { success = false; return; }
							var_25 = (double)variable;
							var_26 = (var_13) * (var_25);
							var_27 = (var_24) - (var_26);
							var_28 = (var_17) + (var_27);
							variable = measurement29.Parameter();
							if (checkValue(variable)) { success = false; return; }
							var_29 = (double)variable;
							var_30 = (var_4) * (var_5);
							var_31 = (var_30) * (var_7);
							variable = measurement32.Parameter();
							if (checkValue(variable)) { success = false; return; }
							var_32 = (double)variable;
							var_33 = (var_31) * (var_32);
							var_34 = (var_29) - (var_33);
							variable = measurement35.Parameter();
							if (checkValue(variable)) { success = false; return; }
							var_35 = (double)variable;
							variable = measurement36.Parameter();
							if (checkValue(variable)) { success = false; return; }
							var_36 = (double)variable;
							variable = measurement37.Parameter();
							if (checkValue(variable)) { success = false; return; }
							var_37 = (double)variable;
						}
						
						internal  Calculation(FormulaEditor.ObjectFormulaTree[] trees, Func<object, bool> checkValue)
						{
							success = true;
							this.trees = trees;
							this.checkValue = checkValue;
							measurement0 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToMeasurement(trees[0]);
							aliasName1 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToAliasName(trees[1]);
							measurement2 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToMeasurement(trees[2]);
							aliasName4 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToAliasName(trees[4]);
							measurement5 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToMeasurement(trees[5]);
							measurement7 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToMeasurement(trees[7]);
							measurement9 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToMeasurement(trees[9]);
							aliasName13 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToAliasName(trees[13]);
							measurement14 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToMeasurement(trees[14]);
							measurement17 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToMeasurement(trees[17]);
							measurement18 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToMeasurement(trees[18]);
							measurement22 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToMeasurement(trees[22]);
							measurement25 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToMeasurement(trees[25]);
							measurement29 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToMeasurement(trees[29]);
							measurement32 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToMeasurement(trees[32]);
							measurement35 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToMeasurement(trees[35]);
							measurement36 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToMeasurement(trees[36]);
							measurement37 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToMeasurement(trees[37]);
							dictionary[trees[0]] = Get_0;
							dictionary[trees[1]] = Get_1;
							dictionary[trees[2]] = Get_2;
							dictionary[trees[3]] = Get_3;
							dictionary[trees[4]] = Get_4;
							dictionary[trees[5]] = Get_5;
							dictionary[trees[6]] = Get_6;
							dictionary[trees[7]] = Get_7;
							dictionary[trees[8]] = Get_8;
							dictionary[trees[9]] = Get_9;
							dictionary[trees[10]] = Get_10;
							dictionary[trees[11]] = Get_11;
							dictionary[trees[12]] = Get_12;
							dictionary[trees[13]] = Get_13;
							dictionary[trees[14]] = Get_14;
							dictionary[trees[15]] = Get_15;
							dictionary[trees[16]] = Get_16;
							dictionary[trees[17]] = Get_17;
							dictionary[trees[18]] = Get_18;
							dictionary[trees[19]] = Get_19;
							dictionary[trees[20]] = Get_20;
							dictionary[trees[21]] = Get_21;
							dictionary[trees[22]] = Get_22;
							dictionary[trees[23]] = Get_23;
							dictionary[trees[24]] = Get_24;
							dictionary[trees[25]] = Get_25;
							dictionary[trees[26]] = Get_26;
							dictionary[trees[27]] = Get_27;
							dictionary[trees[28]] = Get_28;
							dictionary[trees[29]] = Get_29;
							dictionary[trees[30]] = Get_30;
							dictionary[trees[31]] = Get_31;
							dictionary[trees[32]] = Get_32;
							dictionary[trees[33]] = Get_33;
							dictionary[trees[34]] = Get_34;
							dictionary[trees[35]] = Get_35;
							dictionary[trees[36]] = Get_36;
							dictionary[trees[37]] = Get_37;
						}
						
						public Func<object> this[FormulaEditor.ObjectFormulaTree tree]
						{ get { return dictionary[tree]; }}
						
						Dictionary<FormulaEditor.ObjectFormulaTree, Func<object> > dictionary = new Dictionary<FormulaEditor.ObjectFormulaTree, Func<object> >();
						
						DataPerformer.Interfaces.IMeasurement measurement0;
						Diagram.UI.Interfaces.IAliasName aliasName1;
						DataPerformer.Interfaces.IMeasurement measurement2;
						Diagram.UI.Interfaces.IAliasName aliasName4;
						DataPerformer.Interfaces.IMeasurement measurement5;
						DataPerformer.Interfaces.IMeasurement measurement7;
						DataPerformer.Interfaces.IMeasurement measurement9;
						Diagram.UI.Interfaces.IAliasName aliasName13;
						DataPerformer.Interfaces.IMeasurement measurement14;
						DataPerformer.Interfaces.IMeasurement measurement17;
						DataPerformer.Interfaces.IMeasurement measurement18;
						DataPerformer.Interfaces.IMeasurement measurement22;
						DataPerformer.Interfaces.IMeasurement measurement25;
						DataPerformer.Interfaces.IMeasurement measurement29;
						DataPerformer.Interfaces.IMeasurement measurement32;
						DataPerformer.Interfaces.IMeasurement measurement35;
						DataPerformer.Interfaces.IMeasurement measurement36;
						DataPerformer.Interfaces.IMeasurement measurement37;
						FormulaEditor.ObjectFormulaTree currentTree = null;
						object[] currentArray = null;
						double doubleValue = 0;
						FormulaEditor.ObjectFormulaTree[] trees = null;
						double var_0 = 0;
						double var_1 = 0;
						double var_2 = 0;
						double var_3 = 0;
						double var_4 = 0;
						double var_5 = 0;
						double var_6 = 0;
						double var_7 = 0;
						double var_8 = 0;
						double var_9 = 0;
						double var_10 = 0;
						double var_11 = 0;
						double var_12 = 0;
						double var_13 = 0;
						double var_14 = 0;
						double var_15 = 0;
						double var_16 = 0;
						double var_17 = 0;
						double var_18 = 0;
						double var_19 = 0;
						double var_20 = 0;
						double var_21 = 0;
						double var_22 = 0;
						double var_23 = 0;
						double var_24 = 0;
						double var_25 = 0;
						double var_26 = 0;
						double var_27 = 0;
						double var_28 = 0;
						double var_29 = 0;
						double var_30 = 0;
						double var_31 = 0;
						double var_32 = 0;
						double var_33 = 0;
						double var_34 = 0;
						double var_35 = 0;
						double var_36 = 0;
						double var_37 = 0;
						
						object Get_0()
						{
							return success ? var_0 : null;
						}
						
						object Get_1()
						{
							return success ? var_1 : null;
						}
						
						object Get_2()
						{
							return success ? var_2 : null;
						}
						
						object Get_3()
						{
							return success ? var_3 : null;
						}
						
						object Get_4()
						{
							return success ? var_4 : null;
						}
						
						object Get_5()
						{
							return success ? var_5 : null;
						}
						
						object Get_6()
						{
							return success ? var_6 : null;
						}
						
						object Get_7()
						{
							return success ? var_7 : null;
						}
						
						object Get_8()
						{
							return success ? var_8 : null;
						}
						
						object Get_9()
						{
							return success ? var_9 : null;
						}
						
						object Get_10()
						{
							return success ? var_10 : null;
						}
						
						object Get_11()
						{
							return success ? var_11 : null;
						}
						
						object Get_12()
						{
							return success ? var_12 : null;
						}
						
						object Get_13()
						{
							return success ? var_13 : null;
						}
						
						object Get_14()
						{
							return success ? var_14 : null;
						}
						
						object Get_15()
						{
							return success ? var_15 : null;
						}
						
						object Get_16()
						{
							return success ? var_16 : null;
						}
						
						object Get_17()
						{
							return success ? var_17 : null;
						}
						
						object Get_18()
						{
							return success ? var_18 : null;
						}
						
						object Get_19()
						{
							return success ? var_19 : null;
						}
						
						object Get_20()
						{
							return success ? var_20 : null;
						}
						
						object Get_21()
						{
							return success ? var_21 : null;
						}
						
						object Get_22()
						{
							return success ? var_22 : null;
						}
						
						object Get_23()
						{
							return success ? var_23 : null;
						}
						
						object Get_24()
						{
							return success ? var_24 : null;
						}
						
						object Get_25()
						{
							return success ? var_25 : null;
						}
						
						object Get_26()
						{
							return success ? var_26 : null;
						}
						
						object Get_27()
						{
							return success ? var_27 : null;
						}
						
						object Get_28()
						{
							return success ? var_28 : null;
						}
						
						object Get_29()
						{
							return success ? var_29 : null;
						}
						
						object Get_30()
						{
							return success ? var_30 : null;
						}
						
						object Get_31()
						{
							return success ? var_31 : null;
						}
						
						object Get_32()
						{
							return success ? var_32 : null;
						}
						
						object Get_33()
						{
							return success ? var_33 : null;
						}
						
						object Get_34()
						{
							return success ? var_34 : null;
						}
						
						object Get_35()
						{
							return success ? var_35 : null;
						}
						
						object Get_36()
						{
							return success ? var_36 : null;
						}
						
						object Get_37()
						{
							return success ? var_37 : null;
						}
						
						Func<object, bool> checkValue = (o) => false;
						object variable;
						bool success = true;
					
					}
				}
			}
		
			internal class OblectLabel6 : Diagram.UI.Labels.PureObjectLabel
			{
				internal OblectLabel6(string name, Diagram.UI.Interfaces.IDesktop desktop) : base(name, "", "", 0, 0)
				{
					this.desktop = desktop;
					obj = new OblectLabel6.CategoryObject();
					obj.Object = this;
				}
		
				internal class CategoryObject : DataPerformer.Formula.Recursive, FormulaEditor.Interfaces.ITreeCollectionProxyFactory
				{
				
					internal CategoryObject()
					{
						proxyFactory = this;
						vars = new Dictionary<object, object>()
						{
							{'y', new object[] {(System.Double)(0),"<Root>  <F>    <S type=\"FormulaEditor.Symbols.BracketsSymbol\" symbol=\"P\" S=\"( )\" Type=\"2\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"P\">      <F>        <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"t\" S=\"t\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">          <F />        </S>        <S type=\"FormulaEditor.Symbols.BinarySymbol\" symbol=\"&gt;\" S=\"&gt;\" Type=\"3\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"0\" Bold=\"1\" Sb=\"\" />        <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"0\" S=\"0\" Type=\"5\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"0\" Bold=\"1\" Sb=\"\">          <F />        </S>      </F>      <F />    </S>    <S type=\"FormulaEditor.Symbols.BinarySymbol\" symbol=\"∖\" S=\"AND\" Type=\"3\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"0\" Bold=\"1\" Sb=\"\" />    <S type=\"FormulaEditor.Symbols.BracketsSymbol\" symbol=\"P\" S=\"( )\" Type=\"2\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"P\">      <F>        <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"x\" S=\"x\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">          <F />        </S>        <S type=\"FormulaEditor.Symbols.BinarySymbol\" symbol=\"&lt;\" S=\"&lt;\" Type=\"3\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"0\" Bold=\"1\" Sb=\"\" />        <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"0\" S=\"0\" Type=\"5\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"0\" Bold=\"1\" Sb=\"\">          <F />        </S>      </F>      <F />    </S>  </F></Root>",(System.Boolean)(false)}}
							,{'x', new object[] {(System.Double)(0),"<Root>  <F>    <S type=\"FormulaEditor.Symbols.SimpleSymbol\" symbol=\"t\" S=\"t\" Type=\"1\" Index=\"1\" Level=\"0\" DoubleValue=\"0\" UlongValue=\"0\" BoolValue=\"False\" Italic=\"1\" Bold=\"1\" Sb=\"\">      <F />    </S>  </F></Root>",(System.Double)(0)}}
						};
				
						aliases = new Dictionary<object, object>()
						{
						};
				
						externalAls = new Dictionary<object, object>()
						{
						};
				
						pars = new Dictionary<object, object>()
						{
							{'t', "Motion equations.z"}
						};
				
					}
				
					FormulaEditor.Interfaces.ITreeCollectionProxy FormulaEditor.Interfaces.ITreeCollectionProxyFactory.CreateProxy(FormulaEditor.Interfaces.ITreeCollection collection, Func<object, bool> checkValue)
					{
						FormulaEditor.Interfaces.ITreeCollection f = this;
						FormulaEditor.ObjectFormulaTree[] trees = FormulaEditor.StaticExtensionFormulaEditor.Transform(f.Trees);
						return new Calculation(trees, checkValue);
					}
				
					internal class Calculation : FormulaEditor.Interfaces.ITreeCollectionProxy
					{
						public bool Success { get => success; }
						
						public void Update()
						{
							success = true;
							variable = measurement0.Parameter();
							if (checkValue(variable)) { success = false; return; }
							var_0 = (double)variable;
							var_2 = (var_0) > (var_1);
							variable = measurement3.Parameter();
							if (checkValue(variable)) { success = false; return; }
							var_3 = (double)variable;
							var_5 = (var_3) < (var_4);
							var_6 = (var_2) & (var_5);
						}
						
						internal  Calculation(FormulaEditor.ObjectFormulaTree[] trees, Func<object, bool> checkValue)
						{
							success = true;
							this.trees = trees;
							this.checkValue = checkValue;
							measurement0 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToMeasurement(trees[0]);
							measurement3 = DataPerformer.Formula.StaticExtensionDataPerformerFormula.ToMeasurement(trees[3]);
							dictionary[trees[0]] = Get_0;
							dictionary[trees[1]] = Get_1;
							dictionary[trees[2]] = Get_2;
							dictionary[trees[3]] = Get_3;
							dictionary[trees[4]] = Get_4;
							dictionary[trees[5]] = Get_5;
							dictionary[trees[6]] = Get_6;
						}
						
						public Func<object> this[FormulaEditor.ObjectFormulaTree tree]
						{ get { return dictionary[tree]; }}
						
						Dictionary<FormulaEditor.ObjectFormulaTree, Func<object> > dictionary = new Dictionary<FormulaEditor.ObjectFormulaTree, Func<object> >();
						
						DataPerformer.Interfaces.IMeasurement measurement0;
						DataPerformer.Interfaces.IMeasurement measurement3;
						FormulaEditor.ObjectFormulaTree currentTree = null;
						object[] currentArray = null;
						double doubleValue = 0;
						FormulaEditor.ObjectFormulaTree[] trees = null;
						double var_0 = 0;
						double var_1 = 0;
						bool var_2 = false;
						double var_3 = 0;
						double var_4 = 0;
						bool var_5 = false;
						bool var_6 = false;
						
						object Get_0()
						{
							return success ? var_0 : null;
						}
						
						object Get_1()
						{
							return success ? var_1 : null;
						}
						
						object Get_2()
						{
							return success ? var_2 : null;
						}
						
						object Get_3()
						{
							return success ? var_3 : null;
						}
						
						object Get_4()
						{
							return success ? var_4 : null;
						}
						
						object Get_5()
						{
							return success ? var_5 : null;
						}
						
						object Get_6()
						{
							return success ? var_6 : null;
						}
						
						Func<object, bool> checkValue = (o) => false;
						object variable;
						bool success = true;
					
					}
				}
			}
		
			internal class OblectLabel7 : Diagram.UI.Labels.PureObjectLabel
			{
				internal OblectLabel7(string name, Diagram.UI.Interfaces.IDesktop desktop) : base(name, "", "", 0, 0)
				{
					this.desktop = desktop;
					obj = new OblectLabel7.CategoryObject();
					obj.Object = this;
				}
		
				internal class CategoryObject : DataPerformer.Portable.DataConsumer
				{
				internal CategoryObject() : base(0)
				{
				}
				}
			}
		
			internal class ArrowLabel0 : Diagram.UI.Labels.PureArrowLabel
			{
				internal ArrowLabel0(string name, Diagram.UI.Interfaces.IDesktop desktop) : base(name, "", "", 0, 0)
				{
					this.desktop = desktop;
					arrow = new ArrowLabel0.CategoryArrow();
				}
		
				internal class CategoryArrow : DataPerformer.Portable.ObjectTransformerLink
				{
				}
			}
		
			internal class ArrowLabel1 : Diagram.UI.Labels.PureArrowLabel
			{
				internal ArrowLabel1(string name, Diagram.UI.Interfaces.IDesktop desktop) : base(name, "", "", 0, 0)
				{
					this.desktop = desktop;
					arrow = new ArrowLabel1.CategoryArrow();
				}
		
				internal class CategoryArrow : DataPerformer.Portable.ObjectTransformerLink
				{
				}
			}
		
			internal class ArrowLabel2 : Diagram.UI.Labels.PureArrowLabel
			{
				internal ArrowLabel2(string name, Diagram.UI.Interfaces.IDesktop desktop) : base(name, "", "", 0, 0)
				{
					this.desktop = desktop;
					arrow = new ArrowLabel2.CategoryArrow();
				}
		
				internal class CategoryArrow : DataPerformer.Portable.DataLink
				{
				}
			}
		
			internal class ArrowLabel3 : Diagram.UI.Labels.PureArrowLabel
			{
				internal ArrowLabel3(string name, Diagram.UI.Interfaces.IDesktop desktop) : base(name, "", "", 0, 0)
				{
					this.desktop = desktop;
					arrow = new ArrowLabel3.CategoryArrow();
				}
		
				internal class CategoryArrow : DataPerformer.Portable.DataLink
				{
				}
			}
		
			internal class ArrowLabel4 : Diagram.UI.Labels.PureArrowLabel
			{
				internal ArrowLabel4(string name, Diagram.UI.Interfaces.IDesktop desktop) : base(name, "", "", 0, 0)
				{
					this.desktop = desktop;
					arrow = new ArrowLabel4.CategoryArrow();
				}
		
				internal class CategoryArrow : DataPerformer.Portable.DataLink
				{
				}
			}
		
			internal class ArrowLabel5 : Diagram.UI.Labels.PureArrowLabel
			{
				internal ArrowLabel5(string name, Diagram.UI.Interfaces.IDesktop desktop) : base(name, "", "", 0, 0)
				{
					this.desktop = desktop;
					arrow = new ArrowLabel5.CategoryArrow();
				}
		
				internal class CategoryArrow : DataPerformer.Portable.DataLink
				{
				}
			}
		
			internal class ArrowLabel6 : Diagram.UI.Labels.PureArrowLabel
			{
				internal ArrowLabel6(string name, Diagram.UI.Interfaces.IDesktop desktop) : base(name, "", "", 0, 0)
				{
					this.desktop = desktop;
					arrow = new ArrowLabel6.CategoryArrow();
				}
		
				internal class CategoryArrow : DataPerformer.Portable.DataLink
				{
				}
			}
		
			internal class ArrowLabel7 : Diagram.UI.Labels.PureArrowLabel
			{
				internal ArrowLabel7(string name, Diagram.UI.Interfaces.IDesktop desktop) : base(name, "", "", 0, 0)
				{
					this.desktop = desktop;
					arrow = new ArrowLabel7.CategoryArrow();
				}
		
				internal class CategoryArrow : DataPerformer.Portable.DataLink
				{
				}
			}
		
			internal class ArrowLabel8 : Diagram.UI.Labels.PureArrowLabel
			{
				internal ArrowLabel8(string name, Diagram.UI.Interfaces.IDesktop desktop) : base(name, "", "", 0, 0)
				{
					this.desktop = desktop;
					arrow = new ArrowLabel8.CategoryArrow();
				}
		
				internal class CategoryArrow : DataPerformer.Portable.DataLink
				{
				}
			}
		
			internal class ArrowLabel9 : Diagram.UI.Labels.PureArrowLabel
			{
				internal ArrowLabel9(string name, Diagram.UI.Interfaces.IDesktop desktop) : base(name, "", "", 0, 0)
				{
					this.desktop = desktop;
					arrow = new ArrowLabel9.CategoryArrow();
				}
		
				internal class CategoryArrow : DataPerformer.Portable.DataLink
				{
				}
			}
		
			internal class ArrowLabel10 : Diagram.UI.Labels.PureArrowLabel
			{
				internal ArrowLabel10(string name, Diagram.UI.Interfaces.IDesktop desktop) : base(name, "", "", 0, 0)
				{
					this.desktop = desktop;
					arrow = new ArrowLabel10.CategoryArrow();
				}
		
				internal class CategoryArrow : DataPerformer.Portable.DataLink
				{
				}
			}
		
		}
		
	}
}
