<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Accumulator_function" xml:space="preserve">
    <value>Функция - аккумулятор</value>
  </data>
  <data name="AdamsAPOSTROFF_method" xml:space="preserve">
    <value>Метод Адамса</value>
  </data>
  <data name="Combined_selection" xml:space="preserve">
    <value>Комбинированная выборка</value>
  </data>
  <data name="Derivation_calculator" xml:space="preserve">
    <value>Вычислитель производных</value>
  </data>
  <data name="Derivation_order" xml:space="preserve">
    <value>Порядок производной</value>
  </data>
  <data name="Differential_equations" xml:space="preserve">
    <value>Дифференцальные уравнения</value>
  </data>
  <data name="Differential_equation_system" xml:space="preserve">
    <value>Система дифференциальных уравнений</value>
  </data>
  <data name="Euler_method" xml:space="preserve">
    <value>Метод Эйлера</value>
  </data>
  <data name="Formulas_are_acceptedPOINT_ Select_constants_using_checkboxes" xml:space="preserve">
    <value>Формулы выбраны. Выберите констаны, ставя галочки</value>
  </data>
  <data name="Function_consumer" xml:space="preserve">
    <value>Функциональный преобразователь измерений</value>
  </data>
  <data name="Function_files_ORSTARPOINTxml" xml:space="preserve">
    <value>Файлы функций |*.xml</value>
  </data>
  <data name="Initial_conditions" xml:space="preserve">
    <value>Начальные условия</value>
  </data>
  <data name="Intensity" xml:space="preserve">
    <value>Интенсивность</value>
  </data>
  <data name="Interpolation_degree" xml:space="preserve">
    <value>Степень интерполяции</value>
  </data>
  <data name="Invert_x_DEFIS_axis" xml:space="preserve">
    <value>Инверсия оси абсцисс</value>
  </data>
  <data name="Invert_y_DEFIS_axis" xml:space="preserve">
    <value>Инверсия оси ординат</value>
  </data>
  <data name="Recursive" xml:space="preserve">
    <value>Рекурсивный элемент</value>
  </data>
  <data name="Recursive_relations" xml:space="preserve">
    <value>Рекурсивные соотношения</value>
  </data>
  <data name="Regression" xml:space="preserve">
    <value>Регрессия</value>
  </data>
  <data name="Regression_equations" xml:space="preserve">
    <value>Уравнения регрессии</value>
  </data>
  <data name="Regression_link" xml:space="preserve">
    <value>Регрессионная связь</value>
  </data>
  <data name="Regression_parameters" xml:space="preserve">
    <value>Параметры регрессии</value>
  </data>
  <data name="Repeating_series" xml:space="preserve">
    <value>Повторяющаяся серия</value>
  </data>
  <data name="Runge_DEFIS_Kutta_method" xml:space="preserve">
    <value>Метод Рунге - Кутта</value>
  </data>
  <data name="Sigma0_EQUALS" xml:space="preserve">
    <value>Sigma0 =</value>
  </data>
  <data name="Step_count" xml:space="preserve">
    <value>Количество шагов</value>
  </data>
  <data name="Suspended" xml:space="preserve">
    <value>Приостановлен</value>
  </data>
  <data name="Switch_link" xml:space="preserve">
    <value>Связь с переключателем</value>
  </data>
  <data name="Synchronize_graph" xml:space="preserve">
    <value>Синхронизировать график</value>
  </data>
  <data name="Table_dependency_of_two_parameters" xml:space="preserve">
    <value>Табличная зависимость от двух параметров</value>
  </data>
  <data name="Table_selection" xml:space="preserve">
    <value>Выборка таблицы базы данных</value>
  </data>
  <data name="Task_logical_formula" xml:space="preserve">
    <value>Логическая формула задачи</value>
  </data>
  <data name="Time_as_argument" xml:space="preserve">
    <value>Время в качестве аргумента</value>
  </data>
  <data name="Unary_link" xml:space="preserve">
    <value>Связь с одномерной функцией </value>
  </data>
  <data name="Use_x_axis_as" xml:space="preserve">
    <value>Взять ось х как</value>
  </data>
  <data name="Use_y_axis_as" xml:space="preserve">
    <value>Взять ось y как</value>
  </data>
  <data name="Vector_formula_transformer" xml:space="preserve">
    <value>Векторный преобразователь фигур</value>
  </data>
  <data name="Vector_perfomer" xml:space="preserve">
    <value>Вектор - функция</value>
  </data>
  <data name="Link_of_object_transformer" xml:space="preserve">
    <value>Связь с преобразователем объектов</value>
  </data>
  <data name="Object_transformer" xml:space="preserve">
    <value>Преобразователь объектов</value>
  </data>
  <data name="Show_data" xml:space="preserve">
    <value>Показать данные</value>
  </data>
  <data name="Data" xml:space="preserve">
    <value>Данные</value>
  </data>
  <data name="Outside_domain" xml:space="preserve">
    <value>За границами области определения</value>
  </data>
  <data name="Bounded" xml:space="preserve">
    <value>Ограниченный</value>
  </data>
  <data name="Statistics" xml:space="preserve">
    <value>Статистика</value>
  </data>
  <data name="Animation" xml:space="preserve">
    <value>Анимация</value>
  </data>
  <data name="Start_animation" xml:space="preserve">
    <value>Старт анимации</value>
  </data>
  <data name="Export_to_Xml" xml:space="preserve">
    <value>Экспорт в Xml файл</value>
  </data>
  <data name="Import_from_Xml" xml:space="preserve">
    <value>Импорт из Xml файла</value>
  </data>
  <data name="Series_is_not_calculated_yet" xml:space="preserve">
    <value>График пока что не расчитан</value>
  </data>
  <data name="Event_name" xml:space="preserve">
    <value>Имя события</value>
  </data>
</root>