<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAQAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAICAgADA3MAA8MqmAKo/KgD/PyoAAF8qAFVf
        KgCqXyoA/18qAAB/KgBVfyoAqn8qAP9/KgAAnyoAVZ8qAKqfKgD/nyoAAL8qAFW/KgCqvyoA/78qAADf
        KgBV3yoAqt8qAP/fKgAA/yoAVf8qAKr/KgD//yoAAABVAFUAVQCqAFUA/wBVAAAfVQBVH1UAqh9VAP8f
        VQAAP1UAVT9VAKo/VQD/P1UAAF9VAFVfVQCqX1UA/19VAAB/VQBVf1UAqn9VAP9/VQAAn1UAVZ9VAKqf
        VQD/n1UAAL9VAFW/VQCqv1UA/79VAADfVQBV31UAqt9VAP/fVQAA/1UAVf9VAKr/VQD//1UAAAB/AFUA
        fwCqAH8A/wB/AAAffwBVH38Aqh9/AP8ffwAAP38AVT9/AKo/fwD/P38AAF9/AFVffwCqX38A/19/AAB/
        fwBVf38Aqn9/AP9/fwAAn38AVZ9/AKqffwD/n38AAL9/AFW/fwCqv38A/79/AADffwBV338Aqt9/AP/f
        fwAA/38AVf9/AKr/fwD//38AAACqAFUAqgCqAKoA/wCqAAAfqgBVH6oAqh+qAP8fqgAAP6oAVT+qAKo/
        qgD/P6oAAF+qAFVfqgCqX6oA/1+qAAB/qgBVf6oAqn+qAP9/qgAAn6oAVZ+qAKqfqgD/n6oAAL+qAFW/
        qgCqv6oA/7+qAADfqgBV36oAqt+qAP/fqgAA/6oAVf+qAKr/qgD//6oAAADUAFUA1ACqANQA/wDUAAAf
        1ABVH9QAqh/UAP8f1AAAP9QAVT/UAKo/1AD/P9QAAF/UAFVf1ACqX9QA/1/UAAB/1ABVf9QAqn/UAP9/
        1AAAn9QAVZ/UAKqf1AD/n9QAAL/UAFW/1ACqv9QA/7/UAADf1ABV39QAqt/UAP/f1AAA/9QAVf/UAKr/
        1AD//9QAVQD/AKoA/wAAH/8AVR//AKof/wD/H/8AAD//AFU//wCqP/8A/z//AABf/wBVX/8Aql//AP9f
        /wAAf/8AVX//AKp//wD/f/8AAJ//AFWf/wCqn/8A/5//AAC//wBVv/8Aqr//AP+//wAA3/8AVd//AKrf
        /wD/3/8AVf//AKr//wD/zMwA/8z/AP//MwD//2YA//+ZAP//zAAAfwAAVX8AAKp/AAD/fwAAAJ8AAFWf
        AACqnwAA/58AAAC/AABVvwAAqr8AAP+/AAAA3wAAVd8AAKrfAAD/3wAAVf8AAKr/AAAAACoAVQAqAKoA
        KgD/ACoAAB8qAFUfKgCqHyoA/x8qAAA/KgBVPyoA8Pv/AKSgoACAgIAAAAD/AAD/AAAA//8A/wAAAAAA
        AAD//wAA////AAAAAAAAAAAAAAAAAAAAAAAACIYIqgiqCAiqCAimhggAAKoAAIYAhjYODg4yCACqAACG
        AACqAKo3Y187DggAhgAACIarhggJXgljXzaGAKoAAKpMTEwAAF9fX19fCAAIAAAIcJ0HBweGCKoICKoI
        hgAAqnCmAAAAfHxUA1RUA6oAAAAAAAgIB3zLy8rKylQIAACACAgACAeAz8vPy8pUhgAA+wAA//8IoNDP
        z8vLfKoA+wAICAAIAKTQ0NDPz3wJAACqAAD/CAek9tDQ0NB8qgAAhgf//wgIBwCkpaCkfAgAAAgHBwcH
        BwcACKoIhgiqAAAAAAAAAAAAAAAAAAAAAAD//wAAgAEAALQFAAC0BQAAgAUAAIAFAACAAQAAgAEAAIAB
        AAAAAQAAAAEAAAABAAAgAQAAgAEAAIABAAD//wAA
</value>
  </data>
</root>