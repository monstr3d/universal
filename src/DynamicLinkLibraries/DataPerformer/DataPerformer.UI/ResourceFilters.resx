<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Average" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="Donhcian" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        FPEAAAAASUVORK5CYII=
</value>
  </data>
</root>