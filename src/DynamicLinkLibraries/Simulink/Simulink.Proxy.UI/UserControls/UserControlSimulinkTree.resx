<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAI
        EAAAAk1TRnQBSQFMAgEBAwEAAQQBAAEEAQABIAEAASABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABgAMAASADAAEBAQABCAYAARAYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/1sAAgd7AAEHAe8B9wKS
        AfAwAAGZAVkBmQG8PwABvAEHAbwBAAEHAe8B9wGSAQcCGwGSAQcwAAF6A1kBvDoAAbwC7waSAQcB8gH0
        ARsBCAH0AvcvAAGZA1kCUwHuOAAB7wHtAfgEUAEcAfEB9gH0AZkBeAEvAS4BGwG8AZIBBy4AAXoGUwG8
        LAAKUAFKASgCLgEvAXgBmQL1AQgBeAQvAS4BeAH0Ae0B7y0AAe4BTAdTAbwrAAFQCP8BHAMuAS8C9QEb
        AXkBVwgvARsBBwGSAfAsAAF0AUYCTARNAVMBdQHwCAAB7gGTIAABUAH/By8ELgEvAhsDVwE1Bi8BLgGY
        ARsBkgEHKwABBwFFASQBRQFGA0wBTQJTAXQHAAHuAUwBkyAAAVAB/wYvBC4BUAEIAvUBeAJXATUELwFQ
        AXgCCAH0AvcnAALwAQABvAFFAyQBRQFGA0wBTQJTAXkFAAEHAUwBRgG8IAABUAH/Bi8DLgGYBPUBCAJX
        AVYBLwFXAXgBwgEIAXgBLwEuAQgBvAGSAbwlAAHuA7QBbAIeAQEDJAFGAkwCTQJTAXUBvAEAAbwBkwJG
        AXQhAAFQAf8FLwMuAVcC9QEIAVABeAH1AlcBmQEbAQgBeAMvAS4BLwGYAfQBvCUAAbsDswKQAWYBHgEj
        AQECJAFFAUYCTAFNBVMBTQNGAQchAAFQAf8FLwMuARsB9QGZAy4C8wEIAXgBVwMvAVABeAEIAvQB8gHw
        IwABvAG6BbMBkQGQARUBHgEjAyQBRQFGAUwBTQRTAk0CRgFMIgABUAH/BS8CLgFQAfUB9AQuAXgBGwJX
        ATUBVwGZARsB9AEbAZkBUAHsAe8jAAG7AboGswGQAZEBkAFDAR4BIwIkAUUBRgFMAU0EUwFNA0YBkyIA
        AVAB/wQvAy4BeAH1AZgDLgIvAfMBeQGZAfQB9gEbAfYB9AFQAS8BLgFQAe8iAAG7A7kFswGQApEBbAEM
        AR4BAQIkAUYBTAFNBFMBTQNGAe4iAAFQAf8ELwMuAXgB9QF4Ai4DLwF4AfUBmQF4AS8BLgH2AfQBeAEv
        AS4BUAHvIgAB7gG7AboCuQSzAZACkQGLARQBHgEjAiQBRQFMAU0EUwFNAkYBbyMAAVAB/wJQAi8DLgF4
        Af8BeAIuBy8CLgEIAfQBCAEvAS4BUAHvJAAB8AG7AboFswGRAWwBEQEVAUMBHgEBAiQBRgFNBFMBTAJG
        AZMjAAFQAf8FUAIuAVAB/wGZAi4BUAYvAi4BCAH0AQgBLwEuAVAB7ycAAe4BuwG6ArMBbAERAQsBEQEU
        AQsBIwIkAUYBTANTAU0DRgG8IwABUAH/BVABLwEuAS8BGwH0AZkB9AH1AVAELwMuARsB9gGZAi4BUAEH
        KQABvAG7AW0DQwERAhUBHgEBASQBRgFMA1MBTQJGAW8kAAFQAf8DUAJRAlABmQH0Af8BCAF4AQgBeAMv
        Ay4BUAL2AXgCLgFQAbwrAAEHAmwBFAIVAWYBCwEjASQBRQFMA1MBTQJGAZMkAAFQAf8BUAFRAVABcwGZ
        AvQBCAF4Ai8BLgF4AfIGLgEIAfYB8wEvAi4Bcy0AAbsBsgGBAWwBFAFsARUBHgEkAUUBTAFTAVkBUwFN
        AkYBvCQAAVAB/wJzAZkB9AGZAXgFLwIuARsBeAMuAVABGwL1AVcDLgHwLgABuwGQAYEBBgJsAQsBAQEk
        AUwBUwFZAVMBTAFGAW8lAAFQAf8DcwEbA1cBNQUvAZkB9AIIARsD9QF4Ay4BHDAAAe4B9wGQAgYBFQEe
        ASQBTAJZAVMCRgGTJQABUAH/ARwCeAEIAXkCVwE1AS8BVwGZARsBCAFzARsE9QGZAS8DLgEvMwABvAGR
        AYEBbAEeASQBTAJZAVMCRgG8JQABUAH1AZkDeAEbAVcBeAGZARsBmQF4AS8CLgGYAZkCUAUuAZgBUDQA
        AfABkAGBAUMBAQFGAlkBTQFGAXQmAAFzAQgBGwMcAQgBGwGZAVcDLwFQAZgBCAH1AQgFLgEvAXgB/wFQ
        NQAB7gGQAWwBHgFGAlkBTQFGAQcmAAEcAXgB/wGZApgBHAEbATUBVwF4AQgC9AEIAZgBUQFQAi8CUAF4
        ApgB/wFQNgABuwGKAREBJAJZAkwoAAFQARsB9AOZAbwB9AH/ARsBCAGYARwLmQH/AVA3AAG0AWYBJAJZ
        AUYBkygAAQcBUQH1ARsCmQGYAQcBmA+ZAf8BUDcAAe4BkAEeAlMBTAHwKQABHAF4AfUB9BMIAf8BUDgA
        AbsBFAElAUwBkysAARwBUQEbAf8B8wEbEAgB/wFQOQABtAFFAZMtAAEHAVABeAEIAfYR/wFQawABHAFz
        E1AlAAFCAU0BPgcAAT4DAAEoAwABgAMAASADAAEBAQABAQYAAQIWAAP/AQAL/wHPBAAK/wH+AQcEAAH/
        AfgBfwf/ARABBwQAAf8B+AE/Bv8B8AEAAQcEAAH/AfABHwH/AcABAwP/AeABAAEDBAAB/wHwAQ8B/wHf
        AfsC/wMAAQMEAAH/AeABBwH/Ad8B+wL/AwABAQQAAf8B4AEDAfwB3wH7Av8DAAEBBAAB/wHAAQMB+AHf
        AfgC/wMAAQEEAAH8AYABAQHwAd8B+gL/CAAB+AIAAUEB3wH6Av8DAAEBBAAB8AIAAQEB3wH6Av8DAAEB
        BAABwAIAAQMBwAECAv8DAAEDBAABgAIAAQMB/wH+Av8DAAEDBwABAwH/Af4C/wMAAQMHAAEHAf8B/gL/
        AwABAwQAAcACAAEHAf8B/gL/AwABAwQAAfgCAAEHAf8B/gHAAQEDAAEDBAAB/gIAAQ8B/wH+Ad8B/QMA
        AQMEAAH/AYABAAEPAf8B/gFfAf0DAAEHBAAB/wHAAQABDwH/Af4BHwH9AwABBwQAAf8B4AEAAR8BgAEH
        AV8B/QMAAQ8EAAH/AfABAAEfAb8B9wHfAf0DAAEfBAAB/wH8AQABHwG/AfcB3wH9AwABHwQAAf8B/gEA
        AT8BvwH3AV8B/QMAAR8EAAL/AQABPwG/AfABHwH9AwABHwQAAv8BgAF/Ab8B9wFAAQEBgAIAAR8EAAL/
        AcABfwG/AfcC/wGAAgABHwQAAv8BwAF/Ab8B9wL/AcACAAEfBAAC/wHgAf8BvwH3Av8B4AIAAR8EAAL/
        AfEB/wGAAQcC/wHwAgABHwQACP8B/AIAAR8EAAs=
</value>
  </data>
</root>